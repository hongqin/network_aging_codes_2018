library(nlme); library(survival);
gompertz.viability <- function( I, G, t ) {
   tmp1 = 1 - exp( G * t );
   ret <- exp( I * tmp1 / G );
}
#rls = read.delim( "rls.tab", header=T);
#tmp.fit = survfit( Surv(rls[,1]) );
rls = c(10,10, 11,12,,13,13,14,15,15,16,16,17,18,19,20,21,22,25,30)
tmp.fit = survfit( Surv(rls) );
s = c( 1, tmp.fit$surv );
t = c( 0, tmp.fit$time );
s
t
tmp.fit
summary(rls)
plot(tmp.fit);
tmp.fit
fm
fm <- gnls( s ~ exp( (I/G)* ( 1 - exp(G * t) )  ) , 
                  start = list( I = 0.001, G = 0.2 ),
                  );
fm
I.0 <- fm$coefficients[1];
G.0 <- fm$coefficients[2];  
I.0
G.0
fm
str(fm)
help( gnls );
ls
data
rls
data = c(rls, "NA");
data
data[! is.na}
data[! is.na]
data[! is.na()]
data[! is.na(data)]
data = c(rls, NA);
data
data[! is.na(data)]
###Gompertzian survival model
# surival chance
gompertz.viability <- function( I, G, t ) {
   tmp1 = 1 - exp( G * t );
   ret <- exp( I * tmp1 / G );
}
#mortality rate
gompertiz.mortality.rate <- function( I, G, t) { ret <- I exp(G *t) } 
#log desity function of death
log.density.death <- function( age, I, G ) {
   s = gompertz.viability ( I, G, age);
   m = gompertiz.mortality.rate (I, G, t) 
   ret <-  log(s) + log( m )
}
#likelihood function
lh.gomp <- function( data, I, G ) {
   my.data = data[!is.na(data)];
   my.lh = 0;
   for( i in 1:length(data)) {
      my.lh = my.lh - log.density.death(data[i], I, G)
   }
   ret <- my.lh
}
# surival chance
gompertz.viability <- function( I, G, t ) {
   tmp1 = 1 - exp( G * t );
   ret <- exp( I * tmp1 / G );
}
#mortality rate
gompertiz.mortality.rate <- function( I, G, t) { ret <- I * exp(G *t) } 
#log desity function of death
log.density.death <- function( age, I, G ) {
   s = gompertz.viability ( I, G, age);
   m = gompertiz.mortality.rate (I, G, t) 
   ret <-  log(s) + log( m )
}
#likelihood function
lh.gomp <- function( data, I, G ) {
   my.data = data[!is.na(data)];
   my.lh = 0;
   for( i in 1:length(data)) {
      my.lh = my.lh - log.density.death(data[i], I, G)
   }
   ret <- my.lh
}
lh.gomp.0 = lh.gomp( rls, I.0, G.0);
lh.gomp.0
rls
length( rls);
lh.gomp.0 = lh.gomp( rls, I.0, G.0);
traceback()
trace
trace(lh.0)
trace(lh.gomp.0)
trace(lh.gomp)
lh.gomp.0 = lh.gomp( rls, I.0, G.0);
lh.gomp.0
trace(lh.gomp, my.lh)
trace(lh.gomp, lh.gomp.0 )
lh.gomp.0 = lh.gomp( rls, I.0, G.0);
print my.lh
cat my.lh
help( print );
#likelihood function
lh.gomp <- function( data, I, G ) {
   my.data = data[!is.na(data)];
   my.lh = 0;
   for( i in 1:length(data)) {
      my.lh = my.lh - log.density.death(data[i], I, G);
print ( my.lh );
   }
   ret <- my.lh
}
###end of Gompertzain model
lh.gomp.0 = lh.gomp( rls, I.0, G.0);
log.density.death( 10, I.0, G.0) 
x =log.density.death( 10, I.0, G.0) 
x
gompertz.viability(I.0, G.0, 10);
s = gompertz.viability(I.0, G.0, 10);
s
gompertz.viability <- function( I, G, t ) {
   tmp1 = 1 - exp( G * t );
   ret <- exp( I * tmp1 / G );
}
s = gompertz.viability(I.0, G.0, 10);
s
s = gompertz.viability(I.0, G.0, 0);
s
gompertz.viability <- function( I, G, t ) {
   tmp1 = 1 - exp( G * t );
   ret <- exp( I * tmp1 / G );
}
gompertz.viability <- function( I, G, t ) {
   tmp1 = 1 - exp( G * t );
   ret <- as.numeric( exp( I * tmp1 / G )  );
}
s = gompertz.viability(I.0, G.0, 0);
s
mean()
help(mean)
mean
average
help(sum)
#031705
library(nlme); library(survival);
###Gompertzian survival model
# surival chance
gompertz.viability <- function( I, G, t ) {
#   tmp1 = 1 - exp( G * t );
   ret <- exp( (I/G) *(1 - exp(G*t)) )  ;
}
#mortality rate
gompertiz.mortality.rate <- function( I, G, t) { ret <- I * exp(G *t) } 
#log desity function of death
log.density.death <- function( age, I, G ) {
   s = gompertz.viability ( I, G, age);
   m = gompertiz.mortality.rate (I, G, t) 
   ret <-  log(s) + log( m )
}
#likelihood function
lh.gomp <- function( data, I, G ) {
   my.data = data[!is.na(data)];
   s = exp( (I/G) *(1 - exp(G*data)) )
   m = I * exp( G * data );  
   my.lh = log(s) + log(m);
   ret <- sum( my.lh);
}
###end of Gompertzain model
#rls = read.delim( "rls.tab", header=T);
#tmp.fit = survfit( Surv(rls[,1]) );
rls = c(10,10, 11,12,,13,13,14,15,15,16,16,17,18,19,20,21,22,25,30, NA) # a test data
# calculate the initial values
tmp.fit = survfit( Surv(rls) );
s = c( 1, tmp.fit$surv );
t = c( 0, tmp.fit$time );
fm <- gnls( s ~ exp( (I/G)* ( 1 - exp(G * t) )  ) , 
                  start = list( I = 0.001, G = 0.2 ),
                  );
I.0 <- fm$coefficients[1];
G.0 <- fm$coefficients[2];  
lh.gomp.0 = lh.gomp( rls, I.0, G.0);
lh.gomp.0;
#define the search space
rls
#031705
library(nlme); library(survival);
###Gompertzian survival model
# surival chance
gompertz.viability <- function( I, G, t ) {
#   tmp1 = 1 - exp( G * t );
   ret <- exp( (I/G) *(1 - exp(G*t)) )  ;
}
#mortality rate
gompertiz.mortality.rate <- function( I, G, t) { ret <- I * exp(G *t) } 
#log desity function of death
log.density.death <- function( age, I, G ) {
   s = gompertz.viability ( I, G, age);
   m = gompertiz.mortality.rate (I, G, t) 
   ret <-  log(s) + log( m )
}
#likelihood function
lh.gomp <- function( data, I, G ) {
   my.data = data[!is.na(data)];
   s = exp( (I/G) *(1 - exp(G*data)) )
   print( s );
   m = I * exp( G * data );  
   print( m);
   my.lh = log(s) + log(m);
   ret <- sum( my.lh);
}
###end of Gompertzain model
#rls = read.delim( "rls.tab", header=T);
#tmp.fit = survfit( Surv(rls[,1]) );
rls = c(10,10, 11,12,,13,13,14,15,15,16,16,17,18,19,20,21,22,25,30, NA) # a test data
# calculate the initial values
tmp.fit = survfit( Surv(rls) );
s = c( 1, tmp.fit$surv );
t = c( 0, tmp.fit$time );
fm <- gnls( s ~ exp( (I/G)* ( 1 - exp(G * t) )  ) , 
                  start = list( I = 0.001, G = 0.2 ),
                  );
I.0 <- fm$coefficients[1];
G.0 <- fm$coefficients[2];  
lh.gomp.0 = lh.gomp( rls, I.0, G.0);
lh.gomp.0;
#define the search space
#031705
library(nlme); library(survival);
###Gompertzian survival model
# surival chance
gompertz.viability <- function( I, G, t ) {
#   tmp1 = 1 - exp( G * t );
   ret <- exp( (I/G) *(1 - exp(G*t)) )  ;
}
#mortality rate
gompertiz.mortality.rate <- function( I, G, t) { ret <- I * exp(G *t) } 
#log desity function of death
log.density.death <- function( age, I, G ) {
   s = gompertz.viability ( I, G, age);
   m = gompertiz.mortality.rate (I, G, t) 
   ret <-  log(s) + log( m )
}
#likelihood function
lh.gomp <- function( data, I, G ) {
   my.data = data[!is.na(data)];
   s = exp( (I/G) *(1 - exp(G* my.data)) )
   print( s );
   m = I * exp( G * my.data );  
   print( m);
   my.lh = log(s) + log(m);
   ret <- sum( my.lh);
}
###end of Gompertzain model
#rls = read.delim( "rls.tab", header=T);
#tmp.fit = survfit( Surv(rls[,1]) );
rls = c(10,10, 11,12,,13,13,14,15,15,16,16,17,18,19,20,21,22,25,30, NA) # a test data
# calculate the initial values
tmp.fit = survfit( Surv(rls) );
s = c( 1, tmp.fit$surv );
t = c( 0, tmp.fit$time );
fm <- gnls( s ~ exp( (I/G)* ( 1 - exp(G * t) )  ) , 
                  start = list( I = 0.001, G = 0.2 ),
                  );
I.0 <- fm$coefficients[1];
G.0 <- fm$coefficients[2];  
lh.gomp.0 = lh.gomp( rls, I.0, G.0);
lh.gomp.0;
#define the search space
library(ade4)
tb = read.table( "cls.paraquat.tab", header=T);
plot( tb$cls.avg~tb$paraq, xlab = "LD50 paraquat(mM)", ylab="CLS",
  main="wilcox.test= 0.057" );
tb
scattereti()
scatter.eti()
plot( tb$cls.avg~tb$paraq, xlab = "LD50 paraquat(mM)", ylab="CLS",
  main="wilcox.test= 0.057" );
scatterutil.eti( tb$paraq, tb$cls.avg, tb$strain, 0.5 );
 library(survival);
 rls <- read.table("rls.tab", sep="\t", header=T);
rls
ylim <- c(0,1);
 xlim <- c(0,60);
 tmp.fit <- survfit ( Surv(rls[,1]) );
 y <- c( 1, tmp.fit$surv );
 x <- c( 0, tmp.fit$time );
 plot ( x, y, col=cols[1], ylim=ylim, xlim=xlim, type='l', 
xlab="generations", ylab="Viability",
        main="Survival curves of yeast strains, Hong Qin May 17, 2004"
 );
i=2; 
  tmp.fit <- survfit( Surv(rls[,i]) )
  y <- c( 1, tmp.fit$surv );
  x <- c( 0, tmp.fit$time );
  lines ( x, y, col=cols[i] );
 }
 leg.txt <- c( "M5 exp1", "M5 exp2" );
 legend( 40, 0.9, leg.txt, col=cols, lty=1,lwd=2 );
 cols=c("red","blue");
 ylim <- c(0,1);
 xlim <- c(0,60);
 tmp.fit <- survfit ( Surv(rls[,1]) );
 y <- c( 1, tmp.fit$surv );
 x <- c( 0, tmp.fit$time );
 plot ( x, y, col=cols[1], ylim=ylim, xlim=xlim, type='l', 
xlab="generations", ylab="Viability",
        main="Survival curves of yeast strains, Hong Qin May 17, 2004"
 );
i=2; 
  tmp.fit <- survfit( Surv(rls[,i]) )
  y <- c( 1, tmp.fit$surv );
  x <- c( 0, tmp.fit$time );
  lines ( x, y, col=cols[i] );
 }
i=2; 
  tmp.fit <- survfit( Surv(rls[,i]) )
  y <- c( 1, tmp.fit$surv );
  x <- c( 0, tmp.fit$time );
  lines ( x, y, col=cols[i] );
 leg.txt <- c( "M5 exp1", "M5 exp2" );
 legend( 40, 0.9, leg.txt, col=cols, lty=1,lwd=2 );
tmp.fit <- survfit ( Surv(rls[,1]) );
 y <- c( 1, tmp.fit$surv );
 x <- c( 0, tmp.fit$time );
 plot ( x, y, col=cols[1], ylim=ylim, xlim=xlim, type='l', 
xlab="generations", ylab="Viability",
        main="Survival curves of yeast strains, Hong Qin May 17, 2004"
 );
i=2; 
  tmp.fit <- survfit( Surv(rls[,i]) )
  y <- c( 1, tmp.fit$surv );
  x <- c( 0, tmp.fit$time );
  lines ( x, y, col=cols[i] );
i=3; 
  tmp.fit <- survfit( Surv(rls[,i]) )
  y <- c( 1, tmp.fit$surv );
  x <- c( 0, tmp.fit$time );
  lines ( x, y, col=cols[i] );
 leg.txt <- c( "M5 exp1", "M5 exp2", "M5 Merged" );
 legend( 40, 0.9, leg.txt, col=cols, lty=1,lwd=2 );
tb
rls
 cols=c("red","blue", "black");
 ylim <- c(0,1);
 xlim <- c(0,60);
i=3; 
  tmp.fit <- survfit( Surv(rls[,i]) )
  y <- c( 1, tmp.fit$surv );
  x <- c( 0, tmp.fit$time );
tmp.fit
cols=c("red","blue", "black");
 ylim <- c(0,1);
 xlim <- c(0,60);
 tmp.fit <- survfit ( Surv(rls[,1]) );
 y <- c( 1, tmp.fit$surv );
 x <- c( 0, tmp.fit$time );
 plot ( x, y, col=cols[1], ylim=ylim, xlim=xlim, type='l', 
xlab="generations", ylab="Viability",
        main="Survival curves of yeast strains, Hong Qin May 17, 2004"
 );
i=2; 
  tmp.fit <- survfit( Surv(rls[,i]) )
  y <- c( 1, tmp.fit$surv );
  x <- c( 0, tmp.fit$time );
  lines ( x, y, col=cols[i] );
i=3; 
  tmp.fit <- survfit( Surv(rls[,i]) )
  y <- c( 1, tmp.fit$surv );
  x <- c( 0, tmp.fit$time );
  lines ( x, y, col=cols[i] );
 leg.txt <- c( "M5 exp1", "M5 exp2", "M5 Merged" );
 legend( 40, 0.9, leg.txt, col=cols, lty=1,lwd=2 );
 cols=c("red","blue", "black");
 ylim <- c(0,1);
 xlim <- c(0,60);
 tmp.fit <- survfit ( Surv(rls[,1]) );
 y <- c( 1, tmp.fit$surv );
 x <- c( 0, tmp.fit$time );
 plot ( x, y, col=cols[1], ylim=ylim, xlim=xlim, type='l', 
xlab="generations", ylab="Viability",
        main="Survival curves of isolate M5"
 );
i=2; 
  tmp.fit <- survfit( Surv(rls[,i]) )
  y <- c( 1, tmp.fit$surv );
  x <- c( 0, tmp.fit$time );
  lines ( x, y, col=cols[i] );
i=3; 
  tmp.fit <- survfit( Surv(rls[,i]) )
  y <- c( 1, tmp.fit$surv );
  x <- c( 0, tmp.fit$time );
  lines ( x, y, col=cols[i] );
 leg.txt <- c( "M5 exp1", "M5 exp2", "M5 Merged" );
 legend( 40, 0.9, leg.txt, col=cols, lty=1,lwd=2 );
tmp.fit <- survfit ( Surv(rls[,1]) );
 y <- c( 1, tmp.fit$surv );
 x <- c( 0, tmp.fit$time );
 plot ( x, y, col=cols[1], ylim=ylim, xlim=xlim, type='l', 
xlab="Cell Divisions", ylab="Viability",
        main="Survival curves of isolate M5"
 );
i=2; 
  tmp.fit <- survfit( Surv(rls[,i]) )
  y <- c( 1, tmp.fit$surv );
  x <- c( 0, tmp.fit$time );
  lines ( x, y, col=cols[i] );
i=3; 
  tmp.fit <- survfit( Surv(rls[,i]) )
  y <- c( 1, tmp.fit$surv );
  x <- c( 0, tmp.fit$time );
  lines ( x, y, col=cols[i] );
 leg.txt <- c( "M5 exp1", "M5 exp2", "M5 Merged" );
 legend( 40, 0.9, leg.txt, col=cols, lty=1,lwd=2 );
 cols=c("red","blue", "black");
 ylim <- c(0,1);
 xlim <- c(0,65);
 tmp.fit <- survfit ( Surv(rls[,1]) );
 y <- c( 1, tmp.fit$surv );
 x <- c( 0, tmp.fit$time );
 plot ( x, y, col=cols[1], ylim=ylim, xlim=xlim, type='l', 
xlab="Cell Divisions", ylab="Viability",
        main="Survival curves of isolate M5"
 );
i=2; 
  tmp.fit <- survfit( Surv(rls[,i]) )
  y <- c( 1, tmp.fit$surv );
  x <- c( 0, tmp.fit$time );
  lines ( x, y, col=cols[i] );
i=3; 
  tmp.fit <- survfit( Surv(rls[,i]) )
  y <- c( 1, tmp.fit$surv );
  x <- c( 0, tmp.fit$time );
  lines ( x, y, col=cols[i] );
 leg.txt <- c( "M5 exp1", "M5 exp2", "M5 Merged" );
 legend( 40, 0.9, leg.txt, col=cols, lty=1,lwd=2 );
