report$CV[i] = report$stdLS[i] / report$avgLS[i]
report$GompGFlex[i] = GompFlex$res[1,1]
report$GompRFlex[i] = GompFlex$res[2,1]
report$GompLogLikFlex[i] = round(GompFlex$loglik, 1)
report$GompAICFlex[i] = round(GompFlex$AIC)
report$WeibShapeFlex[i] = WeibFlex$res[1,1]
report$WeibRateFlex[i] = WeibFlex$res[2,1]
report$WeibLogLikFlex[i] = round(WeibFlex$loglik, 1)
report$WeibAICFlex[i] = round(WeibFlex$AIC)
#set initial values
Rhat = report$GompRFlex[i]; # 'i' was missing. a bug costed HQ a whole afternoon.
Ghat = report$GompGFlex[i];
nhat = 6;
t0= (nhat-1)/Ghat;
fitBinom = optim ( c(Rhat, t0, nhat),  llh.binomialMortality.single.run,
lifespan=tb[,i],
#method='SANN') #SANN needs control
method="L-BFGS-B",
lower=c(1E-10, 1, 1), upper=c(1,200,20) );
report[i, c("R", "t0", "n")] = fitBinom$par[1:3]
report$G[i] = (report$n[i] - 1)/report$t0[i]
}
report
write.csv(report, file = 'sandbox/_report_kaeberlein04_fit.csv', row.names = FALSE)
# html version, (x,y) are legend positions for plots
#x = c(0,    0,   0,     0,   40,   55,  50,   5);
#y = c(0.06, 0.06, 0.1, 0.1,0.04, 0.03, 0.03, 0.03  );
pdf("kae04_plots.pdf", width=4, height =4 );
# pdf version, (x,y) are legend positions for plots
#x = c(0,    32,   0,     0,   32,   0,  0,    0   );
#y = c(0.07, 0.06, 0.12, 0.12,0.05, 0.04, 0.04, 0.031  );
for( i in 1:length(report[,1])){
my.data = tb[,i]
my.data = my.data[! is.na(my.data)]
h= hist(my.data, br=max(my.data)/2, plot = FALSE);
hist(my.data, probability = TRUE, col='gray', border='white', xlab='RLS', ylab='probability',
main=my.strains[i], ylim=c(0, max(h$density)*1.1), xlim=c(0, max(h$mids)*1.1))
#plot( h$density ~ h$mids, main=my.strains[i], xlab="RLS",ylab="density")
#par(new=TRUE);
t= seq(0, max(h$mids)*1.2, by=0.1)
s = exp( (report$R[i]* report$t0[i]/report$n[i])*(1 - (1+t/report$t0[i])^report$n[i] ) ) ;
m = report$R[i]*(1 + t/ report$t0[i])^(report$n[i] -1 )
pdf = s*m
lines( pdf ~ t, col='red', lty=1)
s.g =  G.s( c(report$GompRFlex[i], report$GompGFlex[i]), t );
m.g =  report$GompRFlex[i]*exp(report$GompGFlex[i]*t)
pdf.g = s.g * m.g
lines( pdf.g ~ t, col="blue", lty=2)
#  legend ( x[i], y[i], c("Binomial","Gompertz"), col=c("red","blue"), lty=c(1,2), cex=0.7 )
legend ( "topright", c("Binomial","Gompertz"), col=c("red","blue"), lty=c(1,2), cex=0.7 )
}
dev.off()
rm(list=ls())
library('flexsurv')
library('stringr')
source("../lifespan.r")
tb = read.csv("kaeberlein04_selected_strains.csv")
my.strains = names(tb);
report = data.frame(my.strains)
report$samplesize = NA; report$R=NA; report$t0=NA; report$n=NA; report$G=NA; #report$longfilename=NA;
#write.csv(tb, "kaeberlein04_selected_strains.csv", row.names = FALSE, quote = FALSE)
for( i in 1:length(report[,1])){
my.data = tb[,i]
my.data = my.data[! is.na(my.data)]
report$samplesize[i] = length(my.data)
GompFlex = flexsurvreg(formula = Surv(tb[,i]) ~ 1, dist = 'gompertz')
WeibFlex = flexsurvreg(formula = Surv(tb[,i]) ~ 1, dist = 'weibull')
report$avgLS[i] =  mean(tb[,i], na.rm=T)
report$stdLS[i] =  sd(tb[,i], na.rm = T)
report$CV[i] = report$stdLS[i] / report$avgLS[i]
report$GompGFlex[i] = GompFlex$res[1,1]
report$GompRFlex[i] = GompFlex$res[2,1]
report$GompLogLikFlex[i] = round(GompFlex$loglik, 1)
report$GompAICFlex[i] = round(GompFlex$AIC)
report$WeibShapeFlex[i] = WeibFlex$res[1,1]
report$WeibRateFlex[i] = WeibFlex$res[2,1]
report$WeibLogLikFlex[i] = round(WeibFlex$loglik, 1)
report$WeibAICFlex[i] = round(WeibFlex$AIC)
#set initial values
Rhat = report$GompRFlex[i]; # 'i' was missing. a bug costed HQ a whole afternoon.
Ghat = report$GompGFlex[i];
nhat = 6;
t0= (nhat-1)/Ghat;
fitBinom = optim ( c(Rhat, t0, nhat),  llh.binomialMortality.single.run,
lifespan=tb[,i],
#method='SANN') #SANN needs control
method="L-BFGS-B",
lower=c(1E-10, 1, 1), upper=c(1,200,20) );
report[i, c("R", "t0", "n")] = fitBinom$par[1:3]
report$G[i] = (report$n[i] - 1)/report$t0[i]
}
report
write.csv(report, file = 'sandbox/_report_kaeberlein04_fit.csv', row.names = FALSE)
# html version, (x,y) are legend positions for plots
#x = c(0,    0,   0,     0,   40,   55,  50,   5);
#y = c(0.06, 0.06, 0.1, 0.1,0.04, 0.03, 0.03, 0.03  );
pdf("kae04_plots.pdf", width=4, height =4 );
# pdf version, (x,y) are legend positions for plots
#x = c(0,    32,   0,     0,   32,   0,  0,    0   );
#y = c(0.07, 0.06, 0.12, 0.12,0.05, 0.04, 0.04, 0.031  );
for( i in 1:length(report[,1])){
my.data = tb[,i]
my.data = my.data[! is.na(my.data)]
h= hist(my.data, br=max(my.data)/2, plot = FALSE);
hist(my.data, probability = TRUE, col='gray', border='white', xlab='RLS', ylab='probability',
main=my.strains[i], ylim=c(0, max(h$density)*1.1), xlim=c(0, max(h$mids)*1.1))
#plot( h$density ~ h$mids, main=my.strains[i], xlab="RLS",ylab="density")
#par(new=TRUE);
t= seq(0, max(h$mids)*1.2, by=0.1)
s = exp( (report$R[i]* report$t0[i]/report$n[i])*(1 - (1+t/report$t0[i])^report$n[i] ) ) ;
m = report$R[i]*(1 + t/ report$t0[i])^(report$n[i] -1 )
pdf = s*m
lines( pdf ~ t, col='red', lty=1)
s.g =  G.s( c(report$GompRFlex[i], report$GompGFlex[i]), t );
m.g =  report$GompRFlex[i]*exp(report$GompGFlex[i]*t)
pdf.g = s.g * m.g
lines( pdf.g ~ t, col="blue", lty=2)
#  legend ( x[i], y[i], c("Binomial","Gompertz"), col=c("red","blue"), lty=c(1,2), cex=0.7 )
legend ( "topright", c("Binomial","Gompertz"), col=c("red","blue"), lty=c(1,2), cex=0.7 )
}
dev.off()
tb.ori = read.table("kaeberlein04_selected_strains", header = T, sep="\t")
rm(list=ls())
library('flexsurv')
library('stringr')
source("../lifespan.r")
set.seed(20170701) #for repeatability
RUNS = 100; #bootstrap runs
list.files()
tb.ori = read.csv("kaeberlein04_selected_strains.csv")
summary(tb.ori)
View(tb.ori)
my.strains = c( "fig1b.BY4742",  "fig2b.sir2", "fig4b.by4742.SIR2.ox.2glucose",
"fig1b.fob1","fig1b.hxk2","fig1b.fob1.hxk2"   )
tb = tb.ori[, my.strains]
strains = names(tb.ori)
strains
strains = names(tb.ori)
strains
my.strains = c( "fig1b.BY4742",  "fig2b.sir2", "fig4b.by4742.SIR2.ox.2glucose",
"fig1b.fob1","fig1b.hxk2","fig1b.fob1.hxk2"   )
tb = tb.ori[, my.strains]
my.strains = c( "fig1b.BY4742",  "fig2a.sir2", "fig4b.by4742.SIR2.ox.2glucose",
"fig1b.fob1","fig1b.hxk2","fig1b.fob1.hxk2"   )
tb = tb.ori[, my.strains]
my.strains = c( "fig1b.BY4742",  "fig2a.sir2", "fig4b.by4742.SIR2.ox.2glucose",
"fig1b.fob1","fig1b.hxk2","fig1b.fob1.hxk2"   )
tb = tb.ori[, my.strains]
write.csv(tb, file='kaeberlein04_selected_strains.csv', row.names = FALSE, quote=FALSE)
rm(list=ls())
library('flexsurv')
library('stringr')
source("../lifespan.r")
set.seed(20170701) #for repeatability
RUNS = 100; #bootstrap runs
list.files()
tb.ori = read.csv("kaeberlein04_selected_strains.csv")
summary(tb.ori)
View(tb.ori)
rm(list=ls())
library('flexsurv')
library('stringr')
source("../lifespan.r")
set.seed(20170701) #for repeatability
RUNS = 100; #bootstrap runs
list.files()
tb = read.csv("kaeberlein04_selected_strains.csv")
summary(tb)
strains = names(tb.ori)
strains = names(tb)
strains
my.strains = c( "BY4742",  "sir2", "SIR2.ox",
"fob1","hxk2","fob1.hxk2"   )
names(tb) = my.strains
#write.csv(tb, file='kaeberlein04_selected_strains.csv', row.names = FALSE, quote=FALSE)
for( BootstrapCount in 1:RUNS ) {#!!!!!!
report = data.frame(my.strains)
report$samplesize = NA; report$R=NA; report$t0=NA; report$n=NA; report$G=NA; #report$longfilename=NA;
for( i in 1:length(report[,1])){
my.data = tb[,i]
my.data = my.data[! is.na(my.data)]
report$samplesize[i] = length(my.data)
#boostrap
bt.data = sample(my.data, replace=TRUE); # BOOTSTRAP HERE
GompFlex = flexsurvreg(formula = Surv(bt.data) ~ 1, dist = 'gompertz')
WeibFlex = flexsurvreg(formula = Surv(bt.data) ~ 1, dist = 'weibull')
report$avgLS[i] =  mean(bt.data)
report$stdLS[i] =  sd(bt.data)
report$CV[i] = report$stdLS[i] / report$avgLS[i]
report$GompGFlex[i] = GompFlex$res[1,1]
report$GompRFlex[i] = GompFlex$res[2,1]
report$GompLogLikFlex[i] = round(GompFlex$loglik, 1)
report$GompAICFlex[i] = round(GompFlex$AIC)
report$WeibShapeFlex[i] = WeibFlex$res[1,1]
report$WeibRateFlex[i] = WeibFlex$res[2,1]
report$WeibLogLikFlex[i] = round(WeibFlex$loglik, 1)
report$WeibAICFlex[i] = round(WeibFlex$AIC)
#set initial values
Rhat = report$GompRFlex[i]; # 'i' was missing. a bug costed HQ a whole afternoon.
Ghat = report$GompGFlex[i];
nhat = 6;
t0= (nhat-1)/Ghat;
fitBinom = optim ( c(Rhat, t0, nhat),  llh.binomialMortality.single.run,
lifespan=bt.data,
#method='SANN') #SANN needs control
method="L-BFGS-B",
lower=c(1E-10, 1, 1), upper=c(1,200,20) );
report[i, c("R", "t0", "n")] = fitBinom$par[1:3]
report$G[i] = (report$n[i] - 1)/report$t0[i]
report$BinomialAIC[i] = 2*3 + 2*fitBinom$value #20171003 AIC for 3-parameter binomial aging model
}
report$BestModel = 'NA';
report$BestModel = ifelse((report$GompAICFlex < report$WeibAICFlex)&(report$GompAICFlex < report$BinomialAIC), "Gomp", report$BestModel)
report$BestModel = ifelse((report$BinomialAIC < report$WeibAICFlex)&(report$BinomialAIC < report$GompAICFlex), "Binom", report$BestModel)
report$BestModel = ifelse((report$WeibAICFlex < report$GompAICFlex)&(report$WeibAICFlex < report$BinomialAIC), "Weib", report$BestModel)
report$BestModel = ifelse( (abs(report$BinomialAIC - report$GompAICFlex)<2 ) | ( abs(report$BinomialAIC-report$WeibAICFlex) <2 ), "bin<2", report$BestModel)
outname = paste("bootstrap/", BootstrapCount, ".csv", sep='');  #has to be changed here !!!
write.csv(report, file = outname, row.names = FALSE);
}#end of boostrap loop
rm(list=ls())
library('flexsurv')
library('stringr')
source("../lifespan.r")
set.seed(20170701) #for repeatability
RUNS = 100; #bootstrap runs
list.files()
tb = read.csv("kaeberlein04_selected_strains.csv")
summary(tb)
strains = names(tb)
strains
my.strains = c( "BY4742",  "sir2", "SIR2.ox",
"fob1","hxk2","fob1.hxk2"   )
names(tb) = my.strains
#write.csv(tb, file='kaeberlein04_selected_strains.csv', row.names = FALSE, quote=FALSE)
for( BootstrapCount in 1:RUNS ) {#!!!!!!
report = data.frame(my.strains)
report$samplesize = NA; report$R=NA; report$t0=NA; report$n=NA; report$G=NA; #report$longfilename=NA;
for( i in 1:length(report[,1])){
my.data = tb[,i]
my.data = my.data[! is.na(my.data)]
report$samplesize[i] = length(my.data)
#boostrap
bt.data = sample(my.data, replace=TRUE); # BOOTSTRAP HERE
GompFlex = flexsurvreg(formula = Surv(bt.data) ~ 1, dist = 'gompertz')
WeibFlex = flexsurvreg(formula = Surv(bt.data) ~ 1, dist = 'weibull')
report$avgLS[i] =  mean(bt.data)
report$stdLS[i] =  sd(bt.data)
report$CV[i] = report$stdLS[i] / report$avgLS[i]
report$GompGFlex[i] = GompFlex$res[1,1]
report$GompRFlex[i] = GompFlex$res[2,1]
report$GompLogLikFlex[i] = round(GompFlex$loglik, 1)
report$GompAICFlex[i] = round(GompFlex$AIC)
report$WeibShapeFlex[i] = WeibFlex$res[1,1]
report$WeibRateFlex[i] = WeibFlex$res[2,1]
report$WeibLogLikFlex[i] = round(WeibFlex$loglik, 1)
report$WeibAICFlex[i] = round(WeibFlex$AIC)
#set initial values
Rhat = report$GompRFlex[i]; # 'i' was missing. a bug costed HQ a whole afternoon.
Ghat = report$GompGFlex[i];
nhat = 6;
t0= (nhat-1)/Ghat;
fitBinom = optim ( c(Rhat, t0, nhat),  llh.binomialMortality.single.run,
lifespan=bt.data,
#method='SANN') #SANN needs control
method="L-BFGS-B",
lower=c(1E-10, 1, 1), upper=c(1,200,20) );
report[i, c("R", "t0", "n")] = fitBinom$par[1:3]
report$G[i] = (report$n[i] - 1)/report$t0[i]
report$BinomialAIC[i] = 2*3 + 2*fitBinom$value #20171003 AIC for 3-parameter binomial aging model
}
report$BestModel = 'NA';
report$BestModel = ifelse((report$GompAICFlex < report$WeibAICFlex)&(report$GompAICFlex < report$BinomialAIC), "Gomp", report$BestModel)
report$BestModel = ifelse((report$BinomialAIC < report$WeibAICFlex)&(report$BinomialAIC < report$GompAICFlex), "Binom", report$BestModel)
report$BestModel = ifelse((report$WeibAICFlex < report$GompAICFlex)&(report$WeibAICFlex < report$BinomialAIC), "Weib", report$BestModel)
report$BestModel = ifelse( (abs(report$BinomialAIC - report$GompAICFlex)<2 ) | ( abs(report$BinomialAIC-report$WeibAICFlex) <2 ), "bin<2", report$BestModel)
outname = paste("bootstrap/", BootstrapCount, ".csv", sep='');  #has to be changed here !!!
write.csv(report, file = outname, row.names = FALSE);
}#end of boostrap loop
BootstrapMean = report;
BootstrapStd = report;
rownames = names(report);
for( col in 2:length(report[1,])) {
for ( row in 1:length(report[,1])) {
buffer = c();
for( BootstrapCount in 1:RUNS ) {
filename = paste("bootstrap/", BootstrapCount, ".csv", sep='');
tb = read.csv(filename)
if( rownames[col] == "BestModel" ) {
buffer = as.character( c(buffer, as.character(tb[row,col])) );
} else {
buffer = c(buffer, tb[row, col]);
}
}
if( rownames[col] == "BestModel" ) {
tmp = table( buffer );
BootstrapMean[row,col] = paste(names(tmp), tmp, sep="=", collapse = ":");
} else {
BootstrapMean[row,col] = mean(buffer);
BootstrapStd[row,col] = sqrt(var(buffer));
}
}
}
BootstrapMean
BootstrapStd
BootstrapMean$Rstd = BootstrapStd$R
BootstrapMean$t0std = BootstrapStd$t0
BootstrapMean$nstd = BootstrapStd$n
BootstrapMean$Gstd = BootstrapStd$G
BootstrapMean$avgLSstd = BootstrapStd$avgLS
BootstrapMean$GompRFlexStd = BootstrapStd$GompRFlex
BootstrapMean$GompGFlexStd = BootstrapStd$GompGFlex
names(BootstrapMean)
BootstrapMean = BootstrapMean[, c( "my.strains",  "samplesize",  "R", "Rstd",  "t0",  "t0std",  "n",  "nstd",   "G",
"Gstd", "avgLS",  "avgLSstd", "stdLS",   "BestModel",  "CV",
"GompRFlex", "GompRFlexStd", "GompGFlex",  "GompGFlexStd",
"GompLogLikFlex",   "WeibShapeFlex",  "WeibRateFlex",
"WeibLogLikFlex",  "WeibAICFlex", "GompAICFlex", "BinomialAIC"
)];
BootstrapMean
BootstrapMeanPublishing = data.frame( BootstrapMean[, c("my.strains")] )
BootstrapMeanPublishing$RwithStd = as.vector( paste(round(BootstrapMean$R, 4), round(BootstrapMean$Rstd,4), sep=" +/- ") );
BootstrapMeanPublishing$t0withStd = as.vector( paste(round(BootstrapMean$t0, 1), round(BootstrapMean$t0std,1), sep=" +/- ") );
BootstrapMeanPublishing$nwithStd = as.vector( paste(round(BootstrapMean$n, 1), round(BootstrapMean$nstd,3), sep=" +/- ") );
BootstrapMeanPublishing$GwithStd = as.vector( paste(round(BootstrapMean$G, 2), round(BootstrapMean$Gstd,3), sep=" +/- ") );
BootstrapMeanPublishing$GompRFlexwithStd = as.vector( paste(round(BootstrapMean$GompRFlex, 3), round(BootstrapMean$GompRFlexStd,3), sep=" +/- ") );
BootstrapMeanPublishing$GompGFlexwithStd = as.vector( paste(round(BootstrapMean$GompGFlex, 2), round(BootstrapMean$GompGFlexStd,3), sep=" +/- ") );
BootstrapMeanPublishing$avgLSwithStd = as.vector( paste(round(BootstrapMean$avgLS, 2), round(BootstrapMean$avgLSstd,3), sep=" +/- ") );
BootstrapMeanPublishing
write.csv(BootstrapMean, file='sandbox/_Kaberlein04_Bootstrap_summary.csv', row.names = FALSE)
write.csv(BootstrapMeanPublishing, file='sandbox/_Kaberlein04_Bootstrap_summary_Publications.csv', row.names = FALSE)
rm(list=ls())
library('flexsurv')
library('stringr')
source("../lifespan.r")
tb = read.csv("kaeberlein04_selected_strains.csv")
View(tb)
my.strains = names(tb);
report = data.frame(my.strains)
report$samplesize = NA; report$R=NA; report$t0=NA; report$n=NA; report$G=NA; #report$longfilename=NA;
#write.csv(tb, "kaeberlein04_selected_strains.csv", row.names = FALSE, quote = FALSE)
for( i in 1:length(report[,1])){
my.data = tb[,i]
my.data = my.data[! is.na(my.data)]
report$samplesize[i] = length(my.data)
GompFlex = flexsurvreg(formula = Surv(tb[,i]) ~ 1, dist = 'gompertz')
WeibFlex = flexsurvreg(formula = Surv(tb[,i]) ~ 1, dist = 'weibull')
report$avgLS[i] =  mean(tb[,i], na.rm=T)
report$stdLS[i] =  sd(tb[,i], na.rm = T)
report$CV[i] = report$stdLS[i] / report$avgLS[i]
report$GompGFlex[i] = GompFlex$res[1,1]
report$GompRFlex[i] = GompFlex$res[2,1]
report$GompLogLikFlex[i] = round(GompFlex$loglik, 1)
report$GompAICFlex[i] = round(GompFlex$AIC)
report$WeibShapeFlex[i] = WeibFlex$res[1,1]
report$WeibRateFlex[i] = WeibFlex$res[2,1]
report$WeibLogLikFlex[i] = round(WeibFlex$loglik, 1)
report$WeibAICFlex[i] = round(WeibFlex$AIC)
#set initial values
Rhat = report$GompRFlex[i]; # 'i' was missing. a bug costed HQ a whole afternoon.
Ghat = report$GompGFlex[i];
nhat = 6;
t0= (nhat-1)/Ghat;
fitBinom = optim ( c(Rhat, t0, nhat),  llh.binomialMortality.single.run,
lifespan=tb[,i],
#method='SANN') #SANN needs control
method="L-BFGS-B",
lower=c(1E-10, 1, 1), upper=c(1,200,20) );
report[i, c("R", "t0", "n")] = fitBinom$par[1:3]
report$G[i] = (report$n[i] - 1)/report$t0[i]
}
tb = read.csv("kaeberlein04_selected_strains.csv")
names(tb)
rm(list=ls())
library('flexsurv')
library('stringr')
source("../lifespan.r")
tb = read.csv("kaeberlein04_selected_strains.csv")
names(tb)
my.strains = c("BY4742", "sir2", "SIR2.ox", "for1", "hxk2", "fob1 hxk2");
report = data.frame(my.strains)
report$samplesize = NA; report$R=NA; report$t0=NA; report$n=NA; report$G=NA; #report$longfilename=NA;
#write.csv(tb, "kaeberlein04_selected_strains.csv", row.names = FALSE, quote = FALSE)
for( i in 1:length(report[,1])){
my.data = tb[,i]
my.data = my.data[! is.na(my.data)]
report$samplesize[i] = length(my.data)
GompFlex = flexsurvreg(formula = Surv(tb[,i]) ~ 1, dist = 'gompertz')
WeibFlex = flexsurvreg(formula = Surv(tb[,i]) ~ 1, dist = 'weibull')
report$avgLS[i] =  mean(tb[,i], na.rm=T)
report$stdLS[i] =  sd(tb[,i], na.rm = T)
report$CV[i] = report$stdLS[i] / report$avgLS[i]
report$GompGFlex[i] = GompFlex$res[1,1]
report$GompRFlex[i] = GompFlex$res[2,1]
report$GompLogLikFlex[i] = round(GompFlex$loglik, 1)
report$GompAICFlex[i] = round(GompFlex$AIC)
report$WeibShapeFlex[i] = WeibFlex$res[1,1]
report$WeibRateFlex[i] = WeibFlex$res[2,1]
report$WeibLogLikFlex[i] = round(WeibFlex$loglik, 1)
report$WeibAICFlex[i] = round(WeibFlex$AIC)
#set initial values
Rhat = report$GompRFlex[i]; # 'i' was missing. a bug costed HQ a whole afternoon.
Ghat = report$GompGFlex[i];
nhat = 6;
t0= (nhat-1)/Ghat;
fitBinom = optim ( c(Rhat, t0, nhat),  llh.binomialMortality.single.run,
lifespan=tb[,i],
#method='SANN') #SANN needs control
method="L-BFGS-B",
lower=c(1E-10, 1, 1), upper=c(1,200,20) );
report[i, c("R", "t0", "n")] = fitBinom$par[1:3]
report$G[i] = (report$n[i] - 1)/report$t0[i]
}
report
write.csv(report, file = 'sandbox/_report_kaeberlein04_fit.csv', row.names = FALSE)
# html version, (x,y) are legend positions for plots
#x = c(0,    0,   0,     0,   40,   55,  50,   5);
#y = c(0.06, 0.06, 0.1, 0.1,0.04, 0.03, 0.03, 0.03  );
pdf("kae04_plots.pdf", width=4, height =4 );
# pdf version, (x,y) are legend positions for plots
#x = c(0,    32,   0,     0,   32,   0,  0,    0   );
#y = c(0.07, 0.06, 0.12, 0.12,0.05, 0.04, 0.04, 0.031  );
for( i in 1:length(report[,1])){
my.data = tb[,i]
my.data = my.data[! is.na(my.data)]
h= hist(my.data, br=max(my.data)/2, plot = FALSE);
hist(my.data, probability = TRUE, col='gray', border='white', xlab='RLS', ylab='probability',
main=my.strains[i], ylim=c(0, max(h$density)*1.1), xlim=c(0, max(h$mids)*1.1))
#plot( h$density ~ h$mids, main=my.strains[i], xlab="RLS",ylab="density")
#par(new=TRUE);
t= seq(0, max(h$mids)*1.2, by=0.1)
s = exp( (report$R[i]* report$t0[i]/report$n[i])*(1 - (1+t/report$t0[i])^report$n[i] ) ) ;
m = report$R[i]*(1 + t/ report$t0[i])^(report$n[i] -1 )
pdf = s*m
lines( pdf ~ t, col='red', lty=1)
s.g =  G.s( c(report$GompRFlex[i], report$GompGFlex[i]), t );
m.g =  report$GompRFlex[i]*exp(report$GompGFlex[i]*t)
pdf.g = s.g * m.g
lines( pdf.g ~ t, col="blue", lty=2)
#  legend ( x[i], y[i], c("Binomial","Gompertz"), col=c("red","blue"), lty=c(1,2), cex=0.7 )
legend ( "topright", c("Binomial","Gompertz"), col=c("red","blue"), lty=c(1,2), cex=0.7 )
}
dev.off()
rm(list=ls())
library('flexsurv')
library('stringr')
source("../lifespan.r")
tb = read.csv("kaeberlein04_selected_strains.csv")
names(tb)
my.strains = c("BY4742", "sir2", "SIR2.ox", "fob1", "hxk2", "fob1 hxk2");
report = data.frame(my.strains)
report$samplesize = NA; report$R=NA; report$t0=NA; report$n=NA; report$G=NA; #report$longfilename=NA;
#write.csv(tb, "kaeberlein04_selected_strains.csv", row.names = FALSE, quote = FALSE)
for( i in 1:length(report[,1])){
my.data = tb[,i]
my.data = my.data[! is.na(my.data)]
report$samplesize[i] = length(my.data)
GompFlex = flexsurvreg(formula = Surv(tb[,i]) ~ 1, dist = 'gompertz')
WeibFlex = flexsurvreg(formula = Surv(tb[,i]) ~ 1, dist = 'weibull')
report$avgLS[i] =  mean(tb[,i], na.rm=T)
report$stdLS[i] =  sd(tb[,i], na.rm = T)
report$CV[i] = report$stdLS[i] / report$avgLS[i]
report$GompGFlex[i] = GompFlex$res[1,1]
report$GompRFlex[i] = GompFlex$res[2,1]
report$GompLogLikFlex[i] = round(GompFlex$loglik, 1)
report$GompAICFlex[i] = round(GompFlex$AIC)
report$WeibShapeFlex[i] = WeibFlex$res[1,1]
report$WeibRateFlex[i] = WeibFlex$res[2,1]
report$WeibLogLikFlex[i] = round(WeibFlex$loglik, 1)
report$WeibAICFlex[i] = round(WeibFlex$AIC)
#set initial values
Rhat = report$GompRFlex[i]; # 'i' was missing. a bug costed HQ a whole afternoon.
Ghat = report$GompGFlex[i];
nhat = 6;
t0= (nhat-1)/Ghat;
fitBinom = optim ( c(Rhat, t0, nhat),  llh.binomialMortality.single.run,
lifespan=tb[,i],
#method='SANN') #SANN needs control
method="L-BFGS-B",
lower=c(1E-10, 1, 1), upper=c(1,200,20) );
report[i, c("R", "t0", "n")] = fitBinom$par[1:3]
report$G[i] = (report$n[i] - 1)/report$t0[i]
}
report
write.csv(report, file = 'sandbox/_report_kaeberlein04_fit.csv', row.names = FALSE)
# html version, (x,y) are legend positions for plots
#x = c(0,    0,   0,     0,   40,   55,  50,   5);
#y = c(0.06, 0.06, 0.1, 0.1,0.04, 0.03, 0.03, 0.03  );
pdf("kae04_plots.pdf", width=4, height =4 );
# pdf version, (x,y) are legend positions for plots
#x = c(0,    32,   0,     0,   32,   0,  0,    0   );
#y = c(0.07, 0.06, 0.12, 0.12,0.05, 0.04, 0.04, 0.031  );
for( i in 1:length(report[,1])){
my.data = tb[,i]
my.data = my.data[! is.na(my.data)]
h= hist(my.data, br=max(my.data)/2, plot = FALSE);
hist(my.data, probability = TRUE, col='gray', border='white', xlab='RLS', ylab='probability',
main=my.strains[i], ylim=c(0, max(h$density)*1.1), xlim=c(0, max(h$mids)*1.1))
#plot( h$density ~ h$mids, main=my.strains[i], xlab="RLS",ylab="density")
#par(new=TRUE);
t= seq(0, max(h$mids)*1.2, by=0.1)
s = exp( (report$R[i]* report$t0[i]/report$n[i])*(1 - (1+t/report$t0[i])^report$n[i] ) ) ;
m = report$R[i]*(1 + t/ report$t0[i])^(report$n[i] -1 )
pdf = s*m
lines( pdf ~ t, col='red', lty=1)
s.g =  G.s( c(report$GompRFlex[i], report$GompGFlex[i]), t );
m.g =  report$GompRFlex[i]*exp(report$GompGFlex[i]*t)
pdf.g = s.g * m.g
lines( pdf.g ~ t, col="blue", lty=2)
#  legend ( x[i], y[i], c("Binomial","Gompertz"), col=c("red","blue"), lty=c(1,2), cex=0.7 )
legend ( "topright", c("Binomial","Gompertz"), col=c("red","blue"), lty=c(1,2), cex=0.7 )
}
dev.off()
