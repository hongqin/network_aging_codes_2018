for( i in 1:length(report[,1])){
#for( i in 3:4){
filename = paste("rls/", strains[i], ".csv", sep='' );
report$longfilename[i] = filename;
tb = read.csv( filename, header= F)
report$samplesize[i] = length(tb[,1])
#boostrap
tb[,1] = sample(tb[,1], replace=TRUE); # BOOTSTRAP HERE
GompFlex = flexsurvreg(formula = Surv(tb[,1]) ~ 1, dist = 'gompertz')
WeibFlex = flexsurvreg(formula = Surv(tb[,1]) ~ 1, dist = 'weibull')
report$avgLS[i] =  mean(tb[,1])
report$stdLS[i] =  sd(tb[,1])
report$CV[i] = report$stdLS[i] / report$avgLS[i]
report$GompGFlex[i] = GompFlex$res[1,1]
report$GompRFlex[i] = GompFlex$res[2,1]
report$GompLogLikFlex[i] = round(GompFlex$loglik, 1)
report$GompAICFlex[i] = round(GompFlex$AIC)
report$WeibShapeFlex[i] = WeibFlex$res[1,1]
report$WeibRateFlex[i] = WeibFlex$res[2,1]
report$WeibLogLikFlex[i] = round(WeibFlex$loglik, 1)
report$WeibAICFlex[i] = round(WeibFlex$AIC)
#set initial values
Rhat = report$GompRFlex[i]; # 'i' was missing. a bug costed HQ a whole afternoon.
Ghat = report$GompGFlex[i];
nhat = 6;
t0= (nhat-1)/Ghat;
fitBinom = optim ( c(Rhat, t0, nhat),  llh.binomialMortality.single.run,
lifespan=tb[,1],
#method='SANN') #SANN needs control
method="L-BFGS-B",
lower=c(1E-10, 1, 4), upper=c(1,200,20) );
report[i, c("R", "t0", "n")] = fitBinom$par[1:3]
report$G[i] = (report$n[i] - 1)/report$t0[i]
report$BinomialAIC[i] = 2*3 + 2*fitBinom$value #20171001 AIC for 3-parameter binomial aging model
}#i loop
report$BestModel = 'NA';
report$BestModel = ifelse((report$GompAICFlex < report$WeibAICFlex)&(report$GompAICFlex < report$BinomialAIC), "Gomp", report$BestModel)
report$BestModel = ifelse((report$BinomialAIC < report$WeibAICFlex)&(report$BinomialAIC < report$GompAICFlex), "Binom", report$BestModel)
report$BestModel = ifelse((report$WeibAICFlex < report$GompAICFlex)&(report$WeibAICFlex < report$BinomialAIC), "Weib", report$BestModel)
report$BestModel = ifelse( (abs(report$BinomialAIC - report$GompAICFlex)<2 ) | (abs(report$BinomialAIC-report$WeibAICFlex)<2 ), "bin<2", report$BestModel)
outname = paste("bootstrap/", BootstrapCount, ".csv", sep='');
write.csv(report, file = outname, row.names = FALSE);
}#end of boostrap loop
BootstrapMean = BootstrapMean[, c( "strains",  "samplesize",  "R", "Rstd",  "t0",  "t0std",  "n",  "nstd",   "G",
"Gstd", "avgLS",  "avgLSstd", "stdLS",   "BestModel",
"longfilename",   "CV",  "GompGFlex",  "GompRFlex",  "GompLogLikFlex",
"WeibShapeFlex",  "WeibRateFlex",  "WeibLogLikFlex",  "WeibAICFlex", "GompAICFlex", "BinomialAIC"  )];
rm(list=ls())
library('flexsurv')
source("lifespan.r")
set.seed(20170101)  #remove to test for different bootstraps
RUNS = 100; #bootstrap runs
strains=c("101S", "M1-2","M13","M14","M2-8","M22","M32","M34","M5","M8","RM112N","S288c","SGU57", "YPS128","YPS163")
report = data.frame(cbind(strains))
report$samplesize = NA; report$R=NA; report$t0=NA; report$n=NA; report$G=NA; report$longfilename=NA;
for( BootstrapCount in 1:RUNS ) {
for( i in 1:length(report[,1])){
#for( i in 3:4){
filename = paste("rls/", strains[i], ".csv", sep='' );
report$longfilename[i] = filename;
tb = read.csv( filename, header= F)
report$samplesize[i] = length(tb[,1])
#boostrap
tb[,1] = sample(tb[,1], replace=TRUE); # BOOTSTRAP HERE
GompFlex = flexsurvreg(formula = Surv(tb[,1]) ~ 1, dist = 'gompertz')
WeibFlex = flexsurvreg(formula = Surv(tb[,1]) ~ 1, dist = 'weibull')
report$avgLS[i] =  mean(tb[,1])
report$stdLS[i] =  sd(tb[,1])
report$CV[i] = report$stdLS[i] / report$avgLS[i]
report$GompGFlex[i] = GompFlex$res[1,1]
report$GompRFlex[i] = GompFlex$res[2,1]
report$GompLogLikFlex[i] = round(GompFlex$loglik, 1)
report$GompAICFlex[i] = round(GompFlex$AIC)
report$WeibShapeFlex[i] = WeibFlex$res[1,1]
report$WeibRateFlex[i] = WeibFlex$res[2,1]
report$WeibLogLikFlex[i] = round(WeibFlex$loglik, 1)
report$WeibAICFlex[i] = round(WeibFlex$AIC)
#set initial values
Rhat = report$GompRFlex[i]; # 'i' was missing. a bug costed HQ a whole afternoon.
Ghat = report$GompGFlex[i];
nhat = 6;
t0= (nhat-1)/Ghat;
fitBinom = optim ( c(Rhat, t0, nhat),  llh.binomialMortality.single.run,
lifespan=tb[,1],
#method='SANN') #SANN needs control
method="L-BFGS-B",
lower=c(1E-10, 1, 4), upper=c(1,200,20) );
report[i, c("R", "t0", "n")] = fitBinom$par[1:3]
report$G[i] = (report$n[i] - 1)/report$t0[i]
report$BinomialAIC[i] = 2*3 + 2*fitBinom$value #20171001 AIC for 3-parameter binomial aging model
}#i loop
report$BestModel = 'NA';
report$BestModel = ifelse((report$GompAICFlex < report$WeibAICFlex)&(report$GompAICFlex < report$BinomialAIC), "Gomp", report$BestModel)
report$BestModel = ifelse((report$BinomialAIC < report$WeibAICFlex)&(report$BinomialAIC < report$GompAICFlex), "Binom", report$BestModel)
report$BestModel = ifelse((report$WeibAICFlex < report$GompAICFlex)&(report$WeibAICFlex < report$BinomialAIC), "Weib", report$BestModel)
report$BestModel = ifelse( (abs(report$BinomialAIC - report$GompAICFlex)<2 ) | (abs(report$BinomialAIC-report$WeibAICFlex)<2 ), "bin<2", report$BestModel)
outname = paste("bootstrap/", BootstrapCount, ".csv", sep='');
write.csv(report, file = outname, row.names = FALSE);
}#end of boostrap loop
BootstrapMean = report;
BootstrapStd = report;
rownames = names(report);
for( col in 2:length(report[1,])) {
for ( row in 1:length(report[,1])) {
buffer = c();
for( BootstrapCount in 1:RUNS ) { #merge all cells into buffer
filename = paste("bootstrap/", BootstrapCount, ".csv", sep='');
tb = read.csv(filename)
if( rownames[col] == "BestModel" ) {  #I ignored the longfile name columns for the summary output
buffer = as.character( c(buffer, as.character(tb[row,col])) );
} else {
buffer = c(buffer, tb[row, col]);
}
}
#get mean or summary info from buffer
if( rownames[col] == "BestModel" ) {
tmp = table( buffer );
BootstrapMean[row,col] = paste(names(tmp), tmp, sep="=", collapse = ":");
} else {
BootstrapMean[row,col] = mean(buffer);
BootstrapStd[row,col] = sqrt(var(buffer));
}
}
}
BootstrapMean
summary(BootstrapMean$n)
BootstrapStd
BootstrapMean$Rstd = BootstrapStd$R
BootstrapMean$t0std = BootstrapStd$t0
BootstrapMean$nstd = BootstrapStd$n
BootstrapMean$Gstd = BootstrapStd$G
BootstrapMean$avgLSstd = BootstrapStd$avgLS
names(BootstrapMean)
BootstrapMean = BootstrapMean[, c( "strains",  "samplesize",  "R", "Rstd",  "t0",  "t0std",  "n",  "nstd",   "G",
"Gstd", "avgLS",  "avgLSstd", "stdLS",   "BestModel",
"longfilename",   "CV",  "GompGFlex",  "GompRFlex",  "GompLogLikFlex",
"WeibShapeFlex",  "WeibRateFlex",  "WeibLogLikFlex",  "WeibAICFlex", "GompAICFlex", "BinomialAIC"  )];
BootstrapMean
BootstrapMeanPublishing = data.frame( BootstrapMean[, c("strains")] )
BootstrapMeanPublishing$RwithStd = as.vector( paste(round(BootstrapMean$R, 4), round(BootstrapMean$Rstd,4), sep=" +/- ") );
BootstrapMeanPublishing$t0withStd = as.vector( paste(round(BootstrapMean$t0, 1), round(BootstrapMean$t0std,1), sep=" +/- ") );
BootstrapMeanPublishing$nwithStd = as.vector( paste(round(BootstrapMean$n, 1), round(BootstrapMean$nstd,3), sep=" +/- ") );
BootstrapMeanPublishing$GwithStd = as.vector( paste(round(BootstrapMean$G, 2), round(BootstrapMean$Gstd,3), sep=" +/- ") );
BootstrapMeanPublishing$avgLSwithStd = as.vector( paste(round(BootstrapMean$avgLS, 2), round(BootstrapMean$avgLSstd,3), sep=" +/- ") );
BootstrapMeanPublishing
write.csv(BootstrapMean, file="sandbox/Bootstrap_summary.csv", row.names = FALSE)
write.csv(BootstrapMeanPublishing, file="sandbox/Bootstrap_summary_for_publication.csv", row.names = FALSE)
p = 0.7
BootstrapMean$One.over.lambdaP07 = BootstrapMean$t0 * p/ (1-p)
BootstrapMean[, c("t0", "One.over.lambdaP07")]
hist(BootstrapMean$One.over.lambdaP07, br=20, xlim=c(60,190), xlab=expression(paste("1/",lambda) ), main=expression(paste("Histogram of 1/",lambda, " when p=0.7")))
p = 0.9
BootstrapMean$One.over.lambdaP09 = BootstrapMean$t0 * p/ (1-p)
BootstrapMean[, c("t0", "One.over.lambdaP09")]
View(BootstrapMean)
View(BootstrapStd)
rm(list=ls())
library('flexsurv')
source("lifespan.r")
set.seed(20170101)  #remove to test for different bootstraps
RUNS = 100; #bootstrap runs
strains=c("101S", "M1-2","M13","M14","M2-8","M22","M32","M34","M5","M8","RM112N","S288c","SGU57", "YPS128","YPS163")
report = data.frame(cbind(strains))
report$samplesize = NA; report$R=NA; report$t0=NA; report$n=NA; report$G=NA; report$longfilename=NA;
for( BootstrapCount in 1:RUNS ) {
for( i in 1:length(report[,1])){
#for( i in 3:4){
filename = paste("rls/", strains[i], ".csv", sep='' );
report$longfilename[i] = filename;
tb = read.csv( filename, header= F)
report$samplesize[i] = length(tb[,1])
#boostrap
tb[,1] = sample(tb[,1], replace=TRUE); # BOOTSTRAP HERE
GompFlex = flexsurvreg(formula = Surv(tb[,1]) ~ 1, dist = 'gompertz')
WeibFlex = flexsurvreg(formula = Surv(tb[,1]) ~ 1, dist = 'weibull')
report$avgLS[i] =  mean(tb[,1])
report$stdLS[i] =  sd(tb[,1])
report$CV[i] = report$stdLS[i] / report$avgLS[i]
report$GompGFlex[i] = GompFlex$res[1,1]
report$GompRFlex[i] = GompFlex$res[2,1]
report$GompLogLikFlex[i] = round(GompFlex$loglik, 1)
report$GompAICFlex[i] = round(GompFlex$AIC)
report$WeibShapeFlex[i] = WeibFlex$res[1,1]
report$WeibRateFlex[i] = WeibFlex$res[2,1]
report$WeibLogLikFlex[i] = round(WeibFlex$loglik, 1)
report$WeibAICFlex[i] = round(WeibFlex$AIC)
#set initial values
Rhat = report$GompRFlex[i]; # 'i' was missing. a bug costed HQ a whole afternoon.
Ghat = report$GompGFlex[i];
nhat = 6;
t0= (nhat-1)/Ghat;
fitBinom = optim ( c(Rhat, t0, nhat),  llh.binomialMortality.single.run,
lifespan=tb[,1],
#method='SANN') #SANN needs control
method="L-BFGS-B",
lower=c(1E-10, 1, 4), upper=c(1,200,20) );
report[i, c("R", "t0", "n")] = fitBinom$par[1:3]
report$G[i] = (report$n[i] - 1)/report$t0[i]
report$BinomialAIC[i] = 2*3 + 2*fitBinom$value #20171001 AIC for 3-parameter binomial aging model
}#i loop
# smaller AIC values indicate better models
report$BestModel = 'Binom';
report$BestModel = ifelse((report$GompAICFlex < report$BinomialAIC), "Gomp", 'Binom')
outname = paste("bootstrap/", BootstrapCount, ".csv", sep='');
write.csv(report, file = outname, row.names = FALSE);
}#end of boostrap loop
BootstrapMean = report;
BootstrapStd = report;
rownames = names(report);
for( col in 2:length(report[1,])) {
for ( row in 1:length(report[,1])) {
buffer = c();
for( BootstrapCount in 1:RUNS ) { #merge all cells into buffer
filename = paste("bootstrap/", BootstrapCount, ".csv", sep='');
tb = read.csv(filename)
if( rownames[col] == "BestModel" ) {  #I ignored the longfile name columns for the summary output
buffer = as.character( c(buffer, as.character(tb[row,col])) );
} else {
buffer = c(buffer, tb[row, col]);
}
}
#get mean or summary info from buffer
if( rownames[col] == "BestModel" ) {
tmp = table( buffer );
BootstrapMean[row,col] = paste(names(tmp), tmp, sep="=", collapse = ":");
} else {
BootstrapMean[row,col] = mean(buffer);
BootstrapStd[row,col] = sqrt(var(buffer));
}
}
}
BootstrapMean
summary(BootstrapMean$n)
BootstrapStd
BootstrapMean$Rstd = BootstrapStd$R
BootstrapMean$t0std = BootstrapStd$t0
BootstrapMean$nstd = BootstrapStd$n
BootstrapMean$Gstd = BootstrapStd$G
BootstrapMean$avgLSstd = BootstrapStd$avgLS
names(BootstrapMean)
BootstrapMean = BootstrapMean[, c( "strains",  "samplesize",  "R", "Rstd",  "t0",  "t0std",  "n",  "nstd",   "G",
"Gstd", "avgLS",  "avgLSstd", "stdLS",   "BestModel",
"longfilename",   "CV",  "GompGFlex",  "GompRFlex",  "GompLogLikFlex",
"WeibShapeFlex",  "WeibRateFlex",  "WeibLogLikFlex",  "WeibAICFlex", "GompAICFlex", "BinomialAIC"  )];
BootstrapMean
BootstrapMeanPublishing = data.frame( BootstrapMean[, c("strains")] )
BootstrapMeanPublishing$RwithStd = as.vector( paste(round(BootstrapMean$R, 4), round(BootstrapMean$Rstd,4), sep=" +/- ") );
BootstrapMeanPublishing$t0withStd = as.vector( paste(round(BootstrapMean$t0, 1), round(BootstrapMean$t0std,1), sep=" +/- ") );
BootstrapMeanPublishing$nwithStd = as.vector( paste(round(BootstrapMean$n, 1), round(BootstrapMean$nstd,3), sep=" +/- ") );
#BootstrapMeanPublishing$GwithStd = as.vector( paste(round(BootstrapMean$G, 2), round(BootstrapMean$Gstd,3), sep=" +/- ") );
BootstrapMeanPublishing$avgLSwithStd = as.vector( paste(round(BootstrapMean$avgLS, 2), round(BootstrapMean$avgLSstd,3), sep=" +/- ") );
BootstrapMeanPublishing
write.csv(BootstrapMean, file="sandbox/Bootstrap_summary.csv", row.names = FALSE)
write.csv(BootstrapMeanPublishing, file="sandbox/Bootstrap_summary_for_publication.csv", row.names = FALSE)
p = 0.7
BootstrapMean$One.over.lambdaP07 = BootstrapMean$t0 * p/ (1-p)
BootstrapMean[, c("t0", "One.over.lambdaP07")]
hist(BootstrapMean$One.over.lambdaP07, br=20, xlim=c(60,190), xlab=expression(paste("1/",lambda) ), main=expression(paste("Histogram of 1/",lambda, " when p=0.7")))
p = 0.9
BootstrapMean$One.over.lambdaP09 = BootstrapMean$t0 * p/ (1-p)
BootstrapMean[, c("t0", "One.over.lambdaP09")]
View(BootstrapMean)
head(BootstrapStd)
BootstrapMean = BootstrapMean[, c( "strains",  "samplesize",  "R", "Rstd",  "t0",  "t0std",  "n",  "nstd",
# "G",
"Gstd", "avgLS",  "avgLSstd", "stdLS",   "BestModel",
"longfilename",   "CV",  "GompGFlex",  "GompRFlex",  "GompLogLikFlex",
"WeibShapeFlex",  "WeibRateFlex",  "WeibLogLikFlex",  "WeibAICFlex", "GompAICFlex", "BinomialAIC"  )];
BootstrapMean
BootstrapMean
BootstrapMean[1,]
BootstrapStd
BootstrapMean$Rstd = BootstrapStd$R
BootstrapMean$t0std = BootstrapStd$t0
BootstrapMean$nstd = BootstrapStd$n
#BootstrapMean$Gstd = BootstrapStd$G
BootstrapMean$GompRFlexstd = BootstrapStd$GompRFlex
BootstrapMean$GompGFlexstd = BootstrapStd$GompGFlex
BootstrapMean$avgLSstd = BootstrapStd$avgLS
names(BootstrapMean)
BootstrapMean = BootstrapMean[, c( "strains",  "samplesize",  "R", "Rstd",  "t0",  "t0std",  "n",  "nstd", "GompRFlex", "GompRFlexstd", "GompGFlex", "GompGFlexstd",
# "G",  #"Gstd",
"avgLS",  "avgLSstd", "stdLS",   "BestModel",
#"longfilename",   "CV",   "GompLogLikFlex",
#"WeibShapeFlex",  "WeibRateFlex",  "WeibLogLikFlex",
"WeibAICFlex", "GompAICFlex", "BinomialAIC"  )];
BootstrapMean
BootstrapMean = BootstrapMean[, c( "strains",  "samplesize",  "R", "Rstd",  "t0",  "t0std",  "n",  "nstd", "GompRFlex", "GompRFlexstd", "GompGFlex", "GompGFlexstd",
# "G",  #"Gstd",
"avgLS",  "avgLSstd", "BestModel",
# "stdLS",
#"longfilename",   "CV",   "GompLogLikFlex",
#"WeibShapeFlex",  "WeibRateFlex",  "WeibLogLikFlex",
"WeibAICFlex", "GompAICFlex", "BinomialAIC"  )];
BootstrapMean
BootstrapMean = BootstrapMean[, c( "strains",  "samplesize",  "R", "Rstd",  "t0",  "t0std",  "n",  "nstd", "GompRFlex", "GompRFlexstd", "GompGFlex", "GompGFlexstd",
# "G",  #"Gstd",
"avgLS",  "avgLSstd", #"BestModel",
# "stdLS",
#"longfilename",   "CV",   "GompLogLikFlex",
#"WeibShapeFlex",  "WeibRateFlex",  "WeibLogLikFlex",
"WeibAICFlex", "GompAICFlex", "BinomialAIC"  )];
BootstrapMean
BootstrapMeanPublishing = data.frame( BootstrapMean[, c("strains")] )
BootstrapMeanPublishing$RwithStd = as.vector( paste(round(BootstrapMean$R, 4), round(BootstrapMean$Rstd,4), sep=" +/- ") );
BootstrapMeanPublishing$t0withStd = as.vector( paste(round(BootstrapMean$t0, 1), round(BootstrapMean$t0std,1), sep=" +/- ") );
BootstrapMeanPublishing$nwithStd = as.vector( paste(round(BootstrapMean$n, 1), round(BootstrapMean$nstd,3), sep=" +/- ") );
#BootstrapMeanPublishing$GwithStd = as.vector( paste(round(BootstrapMean$G, 2), round(BootstrapMean$Gstd,3), sep=" +/- ") );
BootstrapMeanPublishing$GompRwithStd = as.vector( paste(round(BootstrapMean$GompRFlex, 4), round(BootstrapMean$GompRFlexstd,5), sep=" +/- ") );
BootstrapMeanPublishing$GompGwithStd = as.vector( paste(round(BootstrapMean$GompGFlex, 2), round(BootstrapMean$GompGFlexstd,3), sep=" +/- ") );
BootstrapMeanPublishing$avgLSwithStd = as.vector( paste(round(BootstrapMean$avgLS, 2), round(BootstrapMean$avgLSstd,3), sep=" +/- ") );
BootstrapMeanPublishing
View(BootstrapMeanPublishing)
BootstrapMean$Rstd = BootstrapStd$R
BootstrapMean$t0std = BootstrapStd$t0
BootstrapMean$nstd = BootstrapStd$n
#BootstrapMean$Gstd = BootstrapStd$G
BootstrapMean$GompRFlexstd = BootstrapStd$GompRFlex
BootstrapMean$GompGFlexstd = BootstrapStd$GompGFlex
BootstrapMean$GompAICFlexstd = BootstrapStd$GompAICFlex
BootstrapMean$WeibAICFlexstd = BootstrapStd$WeibAICFlex
BootstrapMean$BinomialAICstd = BootstrapStd$BinomialAIC
BootstrapMean$avgLSstd = BootstrapStd$avgLS
names(BootstrapMean)
BootstrapMean = BootstrapMean[, c( "strains",  "samplesize",  "R", "Rstd",  "t0",  "t0std",  "n",  "nstd", "GompRFlex", "GompRFlexstd", "GompGFlex", "GompGFlexstd",
# "G",  #"Gstd",   # "stdLS", #"longfilename",   "CV",   "GompLogLikFlex",
"avgLS",  "avgLSstd", "BestModel",
#"WeibShapeFlex",  "WeibRateFlex",  "WeibLogLikFlex",
"WeibAICFlex", "WeibAICFlexstd", "GompAICFlex",  "GompAICFlexstd", "BinomialAIC", "BinomialAICstd" )];
BootstrapMean$Rstd = BootstrapStd$R
BootstrapMean$t0std = BootstrapStd$t0
BootstrapMean$nstd = BootstrapStd$n
#BootstrapMean$Gstd = BootstrapStd$G
BootstrapMean$GompRFlexstd = BootstrapStd$GompRFlex
BootstrapMean$GompGFlexstd = BootstrapStd$GompGFlex
BootstrapMean$GompAICFlexstd = BootstrapStd$GompAICFlex
BootstrapMean$WeibAICFlexstd = BootstrapStd$WeibAICFlex
BootstrapMean$BinomialAICstd = BootstrapStd$BinomialAIC
BootstrapMean$avgLSstd = BootstrapStd$avgLS
names(BootstrapMean)
BootstrapMean = BootstrapMean[, c( "strains", "R", "Rstd",  "t0",  "t0std",  "n",  "nstd", "GompRFlex", "GompRFlexstd", "GompGFlex", "GompGFlexstd",
# "G",  #"Gstd",   # "stdLS", #"longfilename",   "CV",   "GompLogLikFlex", "samplesize",
"avgLS",  "avgLSstd", "BestModel",
#"WeibShapeFlex",  "WeibRateFlex",  "WeibLogLikFlex",
#"WeibAICFlex", "WeibAICFlexstd", "GompAICFlex",  "GompAICFlexstd", "BinomialAIC", "BinomialAICstd"
)];
BootstrapMean = BootstrapMean[, c( "strains", "R", "Rstd",  "t0",  "t0std",  "n",  "nstd", "GompRFlex", "GompRFlexstd", "GompGFlex", "GompGFlexstd",
# "G",  #"Gstd",   # "stdLS", #"longfilename",   "CV",   "GompLogLikFlex", "samplesize",
"avgLS",  "avgLSstd", "BestModel"
#"WeibShapeFlex",  "WeibRateFlex",  "WeibLogLikFlex",
#"WeibAICFlex", "WeibAICFlexstd", "GompAICFlex",  "GompAICFlexstd", "BinomialAIC", "BinomialAICstd"
)];
names(BootstrapMean)
BootstrapMean = BootstrapMean[, c( "strains", "R", "Rstd",  "t0",  "t0std",  "n",  "nstd", "GompRFlex", "GompRFlexstd", "GompGFlex", "GompGFlexstd",
"avgLS",  "avgLSstd", #"BestModel"
#"WeibShapeFlex",  "WeibRateFlex",  "WeibLogLikFlex",
"WeibAICFlex", "WeibAICFlexstd", "GompAICFlex",  "GompAICFlexstd", "BinomialAIC", "BinomialAICstd"
)];
BootstrapMean
BootstrapMean = BootstrapMean[, c( "strains", "R", "Rstd",  "t0",  "t0std",  "n",  "nstd", "GompRFlex", "GompRFlexstd", "GompGFlex", "GompGFlexstd", "WeibAICFlex", "WeibAICFlexstd", "GompAICFlex",  "GompAICFlexstd", "BinomialAIC", "BinomialAICstd"
)];
BootstrapMean
BootstrapMean
BootstrapMean[,1]
BootstrapMean[1,]
BootstrapMeanPublishing = data.frame( BootstrapMean[, c("strains")] )
BootstrapMeanPublishing$RwithStd = as.vector( paste(round(BootstrapMean$R, 4), round(BootstrapMean$Rstd,4), sep=" +/- ") );
BootstrapMeanPublishing$t0withStd = as.vector( paste(round(BootstrapMean$t0, 1), round(BootstrapMean$t0std,1), sep=" +/- ") );
BootstrapMeanPublishing$nwithStd = as.vector( paste(round(BootstrapMean$n, 1), round(BootstrapMean$nstd,3), sep=" +/- ") );
#BootstrapMeanPublishing$GwithStd = as.vector( paste(round(BootstrapMean$G, 2), round(BootstrapMean$Gstd,3), sep=" +/- ") );
BootstrapMeanPublishing$GompRwithStd = as.vector( paste(round(BootstrapMean$GompRFlex, 4), round(BootstrapMean$GompRFlexstd,5), sep=" +/- ") );
BootstrapMeanPublishing$GompGwithStd = as.vector( paste(round(BootstrapMean$GompGFlex, 2), round(BootstrapMean$GompGFlexstd,3), sep=" +/- ") );
BootstrapMeanPublishing$avgLSwithStd = as.vector( paste(round(BootstrapMean$avgLS, 2), round(BootstrapMean$avgLSstd,3), sep=" +/- ") );
str(BootstrapMean)
BootstrapMean = BootstrapMean[, c( "strains", "avgLS", "avgLSstd" ,
"R", "Rstd",  "t0",  "t0std",  "n",  "nstd", "GompRFlex", "GompRFlexstd", "GompGFlex", "GompGFlexstd", "WeibAICFlex", "WeibAICFlexstd", "GompAICFlex",  "GompAICFlexstd", "BinomialAIC", "BinomialAICstd"
)];
BootstrapMean$Rstd = BootstrapStd$R
BootstrapMean$t0std = BootstrapStd$t0
BootstrapMean$nstd = BootstrapStd$n
#BootstrapMean$Gstd = BootstrapStd$G
BootstrapMean$GompRFlexstd = BootstrapStd$GompRFlex
BootstrapMean$GompGFlexstd = BootstrapStd$GompGFlex
BootstrapMean$GompAICFlexstd = BootstrapStd$GompAICFlex
BootstrapMean$WeibAICFlexstd = BootstrapStd$WeibAICFlex
BootstrapMean$BinomialAICstd = BootstrapStd$BinomialAIC
BootstrapMean$avgLSstd = BootstrapStd$avgLS
names(BootstrapMean)
BootstrapMean = BootstrapMean[, c( "strains", "avgLS", "avgLSstd" ,
"R", "Rstd",  "t0",  "t0std",  "n",  "nstd", "GompRFlex", "GompRFlexstd", "GompGFlex", "GompGFlexstd", "WeibAICFlex", "WeibAICFlexstd", "GompAICFlex",  "GompAICFlexstd", "BinomialAIC", "BinomialAICstd"
)];
BootstrapMean = report;
BootstrapStd = report;
rownames = names(report);
for( col in 2:length(report[1,])) {
for ( row in 1:length(report[,1])) {
buffer = c();
for( BootstrapCount in 1:RUNS ) { #merge all cells into buffer
filename = paste("bootstrap/", BootstrapCount, ".csv", sep='');
tb = read.csv(filename)
if( rownames[col] == "BestModel" ) {  #I ignored the longfile name columns for the summary output
buffer = as.character( c(buffer, as.character(tb[row,col])) );
} else {
buffer = c(buffer, tb[row, col]);
}
}
#get mean or summary info from buffer
if( rownames[col] == "BestModel" ) {
tmp = table( buffer );
BootstrapMean[row,col] = paste(names(tmp), tmp, sep="=", collapse = ":");
} else {
BootstrapMean[row,col] = mean(buffer);
BootstrapStd[row,col] = sqrt(var(buffer));
}
}
}
BootstrapMean
summary(BootstrapMean$n)
summary(BootstrapMean$n)
BootstrapStd
BootstrapMean$Rstd = BootstrapStd$R
BootstrapMean$t0std = BootstrapStd$t0
BootstrapMean$nstd = BootstrapStd$n
#BootstrapMean$Gstd = BootstrapStd$G
BootstrapMean$GompRFlexstd = BootstrapStd$GompRFlex
BootstrapMean$GompGFlexstd = BootstrapStd$GompGFlex
BootstrapMean$GompAICFlexstd = BootstrapStd$GompAICFlex
BootstrapMean$WeibAICFlexstd = BootstrapStd$WeibAICFlex
BootstrapMean$BinomialAICstd = BootstrapStd$BinomialAIC
BootstrapMean$avgLSstd = BootstrapStd$avgLS
names(BootstrapMean)
BootstrapMean = BootstrapMean[, c( "strains", "avgLS", "avgLSstd" ,
"R", "Rstd",  "t0",  "t0std",  "n",  "nstd", "GompRFlex", "GompRFlexstd", "GompGFlex", "GompGFlexstd", "WeibAICFlex", "WeibAICFlexstd", "GompAICFlex",  "GompAICFlexstd", "BinomialAIC", "BinomialAICstd"
)];
BootstrapMean
BootstrapMeanPublishing = data.frame( BootstrapMean[, c("strains")] )
BootstrapMeanPublishing$RwithStd = as.vector( paste(round(BootstrapMean$R, 4), round(BootstrapMean$Rstd,4), sep=" +/- ") );
BootstrapMeanPublishing$t0withStd = as.vector( paste(round(BootstrapMean$t0, 1), round(BootstrapMean$t0std,1), sep=" +/- ") );
BootstrapMeanPublishing$nwithStd = as.vector( paste(round(BootstrapMean$n, 1), round(BootstrapMean$nstd,3), sep=" +/- ") );
#BootstrapMeanPublishing$GwithStd = as.vector( paste(round(BootstrapMean$G, 2), round(BootstrapMean$Gstd,3), sep=" +/- ") );
BootstrapMeanPublishing$GompRwithStd = as.vector( paste(round(BootstrapMean$GompRFlex, 4), round(BootstrapMean$GompRFlexstd,5), sep=" +/- ") );
BootstrapMeanPublishing$GompGwithStd = as.vector( paste(round(BootstrapMean$GompGFlex, 2), round(BootstrapMean$GompGFlexstd,3), sep=" +/- ") );
BootstrapMeanPublishing$avgLSwithStd = as.vector( paste(round(BootstrapMean$avgLS, 2), round(BootstrapMean$avgLSstd,3), sep=" +/- ") );
BootstrapMeanPublishing$WeibAIC = as.vector( paste(round(BootstrapMean$WeibAICFlex, 2), round(BootstrapMean$WeibAICFlexstd,2), sep=" +/- ") );
BootstrapMeanPublishing
View(BootstrapMeanPublishing)
BootstrapMeanPublishing = data.frame( BootstrapMean[, c("strains")] )
BootstrapMeanPublishing$R = as.vector( paste(round(BootstrapMean$R, 4), round(BootstrapMean$Rstd,4), sep=" +/- ") );
BootstrapMeanPublishing$t0= as.vector( paste(round(BootstrapMean$t0, 1), round(BootstrapMean$t0std,1), sep=" +/- ") );
BootstrapMeanPublishing$n = as.vector( paste(round(BootstrapMean$n, 1), round(BootstrapMean$nstd,3), sep=" +/- ") );
#BootstrapMeanPublishing$GwithStd = as.vector( paste(round(BootstrapMean$G, 2), round(BootstrapMean$Gstd,3), sep=" +/- ") );
BootstrapMeanPublishing$GompR = as.vector( paste(round(BootstrapMean$GompRFlex, 4), round(BootstrapMean$GompRFlexstd,5), sep=" +/- ") );
BootstrapMeanPublishing$GompGw = as.vector( paste(round(BootstrapMean$GompGFlex, 2), round(BootstrapMean$GompGFlexstd,3), sep=" +/- ") );
BootstrapMeanPublishing$avgLS = as.vector( paste(round(BootstrapMean$avgLS, 2), round(BootstrapMean$avgLSstd,3), sep=" +/- ") );
BootstrapMeanPublishing$WeibAIC = as.vector( paste(round(BootstrapMean$WeibAICFlex, 2), round(BootstrapMean$WeibAICFlexstd,2), sep=" +/- ") );
BootstrapMeanPublishing
View(BootstrapMeanPublishing)
BootstrapMean[1,]
BootstrapMeanPublishing = data.frame( BootstrapMean[, c("strains")] )
BootstrapMeanPublishing$R = as.vector( paste(round(BootstrapMean$R, 4), round(BootstrapMean$Rstd,4), sep=" +/- ") );
BootstrapMeanPublishing$t0= as.vector( paste(round(BootstrapMean$t0, 1), round(BootstrapMean$t0std,1), sep=" +/- ") );
BootstrapMeanPublishing$n = as.vector( paste(round(BootstrapMean$n, 1), round(BootstrapMean$nstd,3), sep=" +/- ") );
#BootstrapMeanPublishing$GwithStd = as.vector( paste(round(BootstrapMean$G, 2), round(BootstrapMean$Gstd,3), sep=" +/- ") );
BootstrapMeanPublishing$GompR = as.vector( paste(round(BootstrapMean$GompRFlex, 4), round(BootstrapMean$GompRFlexstd,5), sep=" +/- ") );
BootstrapMeanPublishing$GompG = as.vector( paste(round(BootstrapMean$GompGFlex, 2), round(BootstrapMean$GompGFlexstd,3), sep=" +/- ") );
BootstrapMeanPublishing$avgLS = as.vector( paste(round(BootstrapMean$avgLS, 2), round(BootstrapMean$avgLSstd,3), sep=" +/- ") );
BootstrapMeanPublishing$WeibAIC = as.vector( paste(round(BootstrapMean$WeibAICFlex, 2), round(BootstrapMean$WeibAICFlexstd,2), sep=" +/- ") );
BootstrapMeanPublishing$GompAIC = as.vector( paste(round(BootstrapMean$GompAICFlex, 2), round(BootstrapMean$GompAICFlexstd,2), sep=" +/- ") );
BootstrapMeanPublishing$BinomialAIC = as.vector( paste(round(BootstrapMean$BinomialAIC, 2), round(BootstrapMean$BinomialAICstd,2), sep=" +/- ") );
BootstrapMeanPublishing
View(BootstrapMeanPublishing)
BootstrapMeanPublishing = data.frame( BootstrapMean[, c("strains")] )
BootstrapMeanPublishing$avgLS = as.vector( paste(round(BootstrapMean$avgLS, 2), round(BootstrapMean$avgLSstd,3), sep=" +/- ") );
BootstrapMeanPublishing$R = as.vector( paste(round(BootstrapMean$R, 4), round(BootstrapMean$Rstd,4), sep=" +/- ") );
BootstrapMeanPublishing$t0= as.vector( paste(round(BootstrapMean$t0, 1), round(BootstrapMean$t0std,1), sep=" +/- ") );
BootstrapMeanPublishing$n = as.vector( paste(round(BootstrapMean$n, 1), round(BootstrapMean$nstd,3), sep=" +/- ") );
#BootstrapMeanPublishing$GwithStd = as.vector( paste(round(BootstrapMean$G, 2), round(BootstrapMean$Gstd,3), sep=" +/- ") );
BootstrapMeanPublishing$GompR = as.vector( paste(round(BootstrapMean$GompRFlex, 4), round(BootstrapMean$GompRFlexstd,5), sep=" +/- ") );
BootstrapMeanPublishing$GompG = as.vector( paste(round(BootstrapMean$GompGFlex, 2), round(BootstrapMean$GompGFlexstd,3), sep=" +/- ") );
BootstrapMeanPublishing$WeibAIC = as.vector( paste(round(BootstrapMean$WeibAICFlex, 2), round(BootstrapMean$WeibAICFlexstd,2), sep=" +/- ") );
BootstrapMeanPublishing$GompAIC = as.vector( paste(round(BootstrapMean$GompAICFlex, 2), round(BootstrapMean$GompAICFlexstd,2), sep=" +/- ") );
BootstrapMeanPublishing$BinomialAIC = as.vector( paste(round(BootstrapMean$BinomialAIC, 2), round(BootstrapMean$BinomialAICstd,2), sep=" +/- ") );
BootstrapMeanPublishing
View(BootstrapMeanPublishing)
rm(list=ls())
set.seed(20170101)
library(ggplot2)
library(dplyr)
library('flexsurv')
source("../lifespan.r")
report = read.csv("sandbox/Bootstrap_summary.csv")
report = report[, c("strains", "R", "n", "t0","GompRFlex", "GompGFlex")]
View(report)
report = read.csv("sandbox/Bootstrap_summary.csv")
#report = report[, c("strains", "R", "n", "t0","GompRFlex", "GompGFlex")]
View(report)
report = read.csv("sandbox/Bootstrap_summary.csv")
report = report[, c("strains", "R", "n", "t0","GompRFlex", "GompGFlex")]
p = 0.7
report$One.over.lambdaP07 = report$t0 * p/ (1-p)
report[, c("t0", "One.over.lambdaP07")]
p = 0.7
report$One.over.lambdaP07 = report$t0 * p/ (1-p)
report[, c("strains", "t0", "One.over.lambdaP07")]
p = 0.7
report$One.over.lambdaP07 = report$t0 * p/ (1-p)
report[, c("strains", "t0", "One.over.lambdaP07")]
mean(report$One.over.lambdaP07)
p = 0.9
report$One.over.lambdaP07 = report$t0 * p/ (1-p)
report[, c("strains", "t0", "One.over.lambdaP07")]
mean(report$One.over.lambdaP07)
