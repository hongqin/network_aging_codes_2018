report$BestModel = ifelse(abs(report$GompAICFlex - report$WeibAICFlex)<2, "<2", report$BestModel)
summary(lm(report$CV ~ report$BestModel ))
summary(lm(report$CV ~ report$WeibLogLikFlex ))
summary(lm(report$CV ~ report$GompLogLikFlex  ))
summary(lm(report$CV ~ (report$GompLogLikFlex - report$WeibLogLikFlex)))
plot( report$GompLogLikFlex ~ report$CV, col="red", pch=3, xlim=c(0, 0.8), ylim=c(-220, -80))
points( report$CV, report$WeibLogLikFlex, col="blue", pch=4)
m1 = lm( report$GompLogLikFlex ~ report$CV)
m2 = lm( report$WeibLogLikFlex ~ report$CV)
abline( m1, col="red", lty=2)
abline( m2, col='blue', lty=1)
text(0.6, -210, "nearly the same!?")
report$DeltaGompWeiLLH = report$GompLogLikFlex - report$WeibLogLikFlex
plot( report$DeltaGompWeiLLH ~ report$CV )
m3 = lm( report$DeltaGompWeiLLH ~ report$CV)
abline(m3, col='red')
p = 0.5
BootstrapMean$One.over.lambdaP05 = BootstrapMean$t0 * p/ (1-p)
rm(list=ls())
library('flexsurv')
source("lifespan.r")
set.seed(20170101)  #remove to test for different bootstraps
RUNS = 100; #bootstrap runs
strains=c("101S", "M1-2","M13","M14","M2-8","M22","M32","M34","M5","M8","RM112N","S288c","SGU57", "YPS128","YPS163")
report = data.frame(cbind(strains))
report$samplesize = NA; report$R=NA; report$t0=NA; report$n=NA; report$G=NA; report$longfilename=NA;
for( BootstrapCount in 1:RUNS ) {
for( i in 1:length(report[,1])){
#for( i in 3:4){
filename = paste("rls/", strains[i], ".csv", sep='' );
report$longfilename[i] = filename;
tb = read.csv( filename, header= F)
report$samplesize[i] = length(tb[,1])
#boostrap
tb[,1] = sample(tb[,1], replace=TRUE); # BOOTSTRAP HERE
GompFlex = flexsurvreg(formula = Surv(tb[,1]) ~ 1, dist = 'gompertz')
WeibFlex = flexsurvreg(formula = Surv(tb[,1]) ~ 1, dist = 'weibull')
report$avgLS[i] =  mean(tb[,1])
report$stdLS[i] =  sd(tb[,1])
report$CV[i] = report$stdLS[i] / report$avgLS[i]
report$GompGFlex[i] = GompFlex$res[1,1]
report$GompRFlex[i] = GompFlex$res[2,1]
report$GompLogLikFlex[i] = round(GompFlex$loglik, 1)
report$GompAICFlex[i] = round(GompFlex$AIC)
report$WeibShapeFlex[i] = WeibFlex$res[1,1]
report$WeibRateFlex[i] = WeibFlex$res[2,1]
report$WeibLogLikFlex[i] = round(WeibFlex$loglik, 1)
report$WeibAICFlex[i] = round(WeibFlex$AIC)
#set initial values
Rhat = report$GompRFlex[i]; # 'i' was missing. a bug costed HQ a whole afternoon.
Ghat = report$GompGFlex[i];
nhat = 6;
t0= (nhat-1)/Ghat;
fitBinom = optim ( c(Rhat, t0, nhat),  llh.binomialMortality.single.run,
lifespan=tb[,1],
#method='SANN') #SANN needs control
method="L-BFGS-B",
lower=c(1E-10, 1, 4), upper=c(1,200,20) );
report[i, c("R", "t0", "n")] = fitBinom$par[1:3]
report$G[i] = (report$n[i] - 1)/report$t0[i]
report$BinomialAIC[i] = 2*3 + 2*fitBinom$value #20171001 AIC for 3-parameter binomial aging model
}#i loop
report$BestModel = 'NA';
report$BestModel = ifelse((report$GompAICFlex < report$WeibAICFlex)&(report$GompAICFlex < report$BinomialAIC), "Gomp", report$BestModel)
report$BestModel = ifelse((report$BinomialAIC < report$WeibAICFlex)&(report$BinomialAIC < report$GompAICFlex), "Binom", report$BestModel)
report$BestModel = ifelse((report$WeibAICFlex < report$GompAICFlex)&(report$WeibAICFlex < report$BinomialAIC), "Weib", report$BestModel)
report$BestModel = ifelse( (abs(report$BinomialAIC - report$GompAICFlex)<2 ) | (abs(report$BinomialAIC-report$WeibAICFlex)<2 ), "bin<2", report$BestModel)
outname = paste("bootstrap/", BootstrapCount, ".csv", sep='');
write.csv(report, file = outname, row.names = FALSE);
}#end of boostrap loop
BootstrapMean = report;
BootstrapStd = report;
rownames = names(report);
for( col in 2:length(report[1,])) {
for ( row in 1:length(report[,1])) {
buffer = c();
for( BootstrapCount in 1:RUNS ) { #merge all cells into buffer
filename = paste("bootstrap/", BootstrapCount, ".csv", sep='');
tb = read.csv(filename)
if( rownames[col] == "BestModel" ) {  #I ignored the longfile name columns for the summary output
buffer = as.character( c(buffer, as.character(tb[row,col])) );
} else {
buffer = c(buffer, tb[row, col]);
}
}
#get mean or summary info from buffer
if( rownames[col] == "BestModel" ) {
tmp = table( buffer );
BootstrapMean[row,col] = paste(names(tmp), tmp, sep="=", collapse = ":");
} else {
BootstrapMean[row,col] = mean(buffer);
BootstrapStd[row,col] = sqrt(var(buffer));
}
}
}
BootstrapMean
summary(BootstrapMean$n)
BootstrapStd
BootstrapMean$Rstd = BootstrapStd$R
BootstrapMean$t0std = BootstrapStd$t0
BootstrapMean$nstd = BootstrapStd$n
BootstrapMean$Gstd = BootstrapStd$G
BootstrapMean$avgLSstd = BootstrapStd$avgLS
names(BootstrapMean)
BootstrapMean = BootstrapMean[, c( "strains",  "samplesize",  "R", "Rstd",  "t0",  "t0std",  "n",  "nstd",   "G",
"Gstd", "avgLS",  "avgLSstd", "stdLS",   "BestModel",
"longfilename",   "CV",  "GompGFlex",  "GompRFlex",  "GompLogLikFlex",
"WeibShapeFlex",  "WeibRateFlex",  "WeibLogLikFlex",  "WeibAICFlex", "GompAICFlex", "BinomialAIC"  )];
BootstrapMean
BootstrapMeanPublishing = data.frame( BootstrapMean[, c("strains")] )
BootstrapMeanPublishing$RwithStd = as.vector( paste(round(BootstrapMean$R, 4), round(BootstrapMean$Rstd,4), sep=" +/- ") );
BootstrapMeanPublishing$t0withStd = as.vector( paste(round(BootstrapMean$t0, 1), round(BootstrapMean$t0std,1), sep=" +/- ") );
BootstrapMeanPublishing$nwithStd = as.vector( paste(round(BootstrapMean$n, 1), round(BootstrapMean$nstd,3), sep=" +/- ") );
BootstrapMeanPublishing$GwithStd = as.vector( paste(round(BootstrapMean$G, 2), round(BootstrapMean$Gstd,3), sep=" +/- ") );
BootstrapMeanPublishing$avgLSwithStd = as.vector( paste(round(BootstrapMean$avgLS, 2), round(BootstrapMean$avgLSstd,3), sep=" +/- ") );
BootstrapMeanPublishing
write.csv(BootstrapMean, file="sandbox/Bootstrap_summary.csv", row.names = FALSE)
write.csv(BootstrapMeanPublishing, file="sandbox/Bootstrap_summary_for_publication.csv", row.names = FALSE)
p = 0.7
BootstrapMean$One.over.lambdaP07 = BootstrapMean$t0 * p/ (1-p)
BootstrapMean[, c("t0", "One.over.lambdaP07")]
hist(BootstrapMean$One.over.lambdaP07, br=20, xlim=c(60,190), xlab=expression(paste("1/",lambda) ), main=expression(paste("Histogram of 1/",lambda, " when p=0.7")))
p = 0.9
BootstrapMean$One.over.lambdaP09 = BootstrapMean$t0 * p/ (1-p)
BootstrapMean[, c("t0", "One.over.lambdaP09")]
p = 0.5
BootstrapMean$One.over.lambdaP05 = BootstrapMean$t0 * p/ (1-p)
BootstrapMean[, c("t0", "One.over.lambdaP05")]
p = 0.1
BootstrapMean$One.over.lambdaP05 = BootstrapMean$t0 * p/ (1-p)
BootstrapMean[, c("t0", "One.over.lambdaP05")]
p = 0.5
BootstrapMean$One.over.lambdaP05 = BootstrapMean$t0 * p/ (1-p)
BootstrapMean[, c("t0", "One.over.lambdaP05")]
rm(list=ls())
library('flexsurv')
source("lifespan.r")
set.seed(20170101)  #remove to test for different bootstraps
RUNS = 100; #bootstrap runs
strains=c("101S", "M1-2","M13","M14","M2-8","M22","M32","M34","M5","M8","RM112N","S288c","SGU57", "YPS128","YPS163")
report = data.frame(cbind(strains))
report$samplesize = NA; report$R=NA; report$t0=NA; report$n=NA; report$G=NA; report$longfilename=NA;
for( BootstrapCount in 1:RUNS ) {
for( i in 1:length(report[,1])){
#for( i in 3:4){
filename = paste("rls/", strains[i], ".csv", sep='' );
report$longfilename[i] = filename;
tb = read.csv( filename, header= F)
report$samplesize[i] = length(tb[,1])
#boostrap
tb[,1] = sample(tb[,1], replace=TRUE); # BOOTSTRAP HERE
GompFlex = flexsurvreg(formula = Surv(tb[,1]) ~ 1, dist = 'gompertz')
WeibFlex = flexsurvreg(formula = Surv(tb[,1]) ~ 1, dist = 'weibull')
report$avgLS[i] =  mean(tb[,1])
report$stdLS[i] =  sd(tb[,1])
report$CV[i] = report$stdLS[i] / report$avgLS[i]
report$GompGFlex[i] = GompFlex$res[1,1]
report$GompRFlex[i] = GompFlex$res[2,1]
report$GompLogLikFlex[i] = round(GompFlex$loglik, 1)
report$GompAICFlex[i] = round(GompFlex$AIC)
report$WeibShapeFlex[i] = WeibFlex$res[1,1]
report$WeibRateFlex[i] = WeibFlex$res[2,1]
report$WeibLogLikFlex[i] = round(WeibFlex$loglik, 1)
report$WeibAICFlex[i] = round(WeibFlex$AIC)
#set initial values
Rhat = report$GompRFlex[i]; # 'i' was missing. a bug costed HQ a whole afternoon.
Ghat = report$GompGFlex[i];
nhat = 6;
t0= (nhat-1)/Ghat;
fitBinom = optim ( c(Rhat, t0, nhat),  llh.binomialMortality.single.run,
lifespan=tb[,1],
#method='SANN') #SANN needs control
method="L-BFGS-B",
lower=c(1E-10, 1, 4), upper=c(1,200,20) );
report[i, c("R", "t0", "n")] = fitBinom$par[1:3]
report$G[i] = (report$n[i] - 1)/report$t0[i]
report$BinomialAIC[i] = 2*3 + 2*fitBinom$value #20171001 AIC for 3-parameter binomial aging model
}#i loop
report$BestModel = 'NA';
report$BestModel = ifelse((report$GompAICFlex < report$WeibAICFlex)&(report$GompAICFlex < report$BinomialAIC), "Gomp", report$BestModel)
report$BestModel = ifelse((report$BinomialAIC < report$WeibAICFlex)&(report$BinomialAIC < report$GompAICFlex), "Binom", report$BestModel)
report$BestModel = ifelse((report$WeibAICFlex < report$GompAICFlex)&(report$WeibAICFlex < report$BinomialAIC), "Weib", report$BestModel)
report$BestModel = ifelse( (abs(report$BinomialAIC - report$GompAICFlex)<2 ) | (abs(report$BinomialAIC-report$WeibAICFlex)<2 ), "bin<2", report$BestModel)
outname = paste("bootstrap/", BootstrapCount, ".csv", sep='');
write.csv(report, file = outname, row.names = FALSE);
}#end of boostrap loop
BootstrapMean = report;
BootstrapStd = report;
rownames = names(report);
for( col in 2:length(report[1,])) {
for ( row in 1:length(report[,1])) {
buffer = c();
for( BootstrapCount in 1:RUNS ) { #merge all cells into buffer
filename = paste("bootstrap/", BootstrapCount, ".csv", sep='');
tb = read.csv(filename)
if( rownames[col] == "BestModel" ) {  #I ignored the longfile name columns for the summary output
buffer = as.character( c(buffer, as.character(tb[row,col])) );
} else {
buffer = c(buffer, tb[row, col]);
}
}
#get mean or summary info from buffer
if( rownames[col] == "BestModel" ) {
tmp = table( buffer );
BootstrapMean[row,col] = paste(names(tmp), tmp, sep="=", collapse = ":");
} else {
BootstrapMean[row,col] = mean(buffer);
BootstrapStd[row,col] = sqrt(var(buffer));
}
}
}
BootstrapMean
summary(BootstrapMean$n)
BootstrapStd
BootstrapMean$Rstd = BootstrapStd$R
BootstrapMean$t0std = BootstrapStd$t0
BootstrapMean$nstd = BootstrapStd$n
BootstrapMean$Gstd = BootstrapStd$G
BootstrapMean$avgLSstd = BootstrapStd$avgLS
names(BootstrapMean)
BootstrapMean = BootstrapMean[, c( "strains",  "samplesize",  "R", "Rstd",  "t0",  "t0std",  "n",  "nstd",   "G",
"Gstd", "avgLS",  "avgLSstd", "stdLS",   "BestModel",
"longfilename",   "CV",  "GompGFlex",  "GompRFlex",  "GompLogLikFlex",
"WeibShapeFlex",  "WeibRateFlex",  "WeibLogLikFlex",  "WeibAICFlex", "GompAICFlex", "BinomialAIC"  )];
BootstrapMean
BootstrapMeanPublishing = data.frame( BootstrapMean[, c("strains")] )
BootstrapMeanPublishing$RwithStd = as.vector( paste(round(BootstrapMean$R, 4), round(BootstrapMean$Rstd,4), sep=" +/- ") );
BootstrapMeanPublishing$t0withStd = as.vector( paste(round(BootstrapMean$t0, 1), round(BootstrapMean$t0std,1), sep=" +/- ") );
BootstrapMeanPublishing$nwithStd = as.vector( paste(round(BootstrapMean$n, 1), round(BootstrapMean$nstd,3), sep=" +/- ") );
BootstrapMeanPublishing$GwithStd = as.vector( paste(round(BootstrapMean$G, 2), round(BootstrapMean$Gstd,3), sep=" +/- ") );
BootstrapMeanPublishing$avgLSwithStd = as.vector( paste(round(BootstrapMean$avgLS, 2), round(BootstrapMean$avgLSstd,3), sep=" +/- ") );
BootstrapMeanPublishing
write.csv(BootstrapMean, file="sandbox/Bootstrap_summary.csv", row.names = FALSE)
write.csv(BootstrapMeanPublishing, file="sandbox/Bootstrap_summary_for_publication.csv", row.names = FALSE)
p = 0.7
BootstrapMean$One.over.lambdaP07 = BootstrapMean$t0 * p/ (1-p)
BootstrapMean[, c("t0", "One.over.lambdaP07")]
hist(BootstrapMean$One.over.lambdaP07, br=20, xlim=c(60,190), xlab=expression(paste("1/",lambda) ), main=expression(paste("Histogram of 1/",lambda, " when p=0.7")))
p = 0.9
BootstrapMean$One.over.lambdaP09 = BootstrapMean$t0 * p/ (1-p)
BootstrapMean[, c("t0", "One.over.lambdaP09")]
tb = read.csv("sandbox/Bootstrap_summary.csv")
rm(list=ls())
set.seed(20170101)
library('flexsurv')
source("../lifespan.r")
tb = read.csv("sandbox/Bootstrap_summary.csv")
View(tb)
View(tb)
report = read.csv("sandbox/Bootstrap_summary.csv")
rm(list=ls())
set.seed(20170101)
library('flexsurv')
source("../lifespan.r")
report = read.csv("sandbox/Bootstrap_summary.csv")
summary(lm(log10(report$GompRFlex) ~ report$GompGFlex))
summary(lm(log10(report$R) ~ report$GompGFlex))
summary(lm(log10(report$R) ~ report$G)) #G from t0 and n
summary(lm(report$GompGFlex ~ report$G)) #good agreement bwteen GFlex and G from binomial modeling
summary(lm(log10(report$R) ~ report$t0)) #G from t0 and n
summary(lm(log10(report$R) ~ report$n)) #G from t0 and n
View(report)
View(report)
head(report)
report = read.csv("sandbox/Bootstrap_summary.csv")
report = report[, c("R", "n", "t0","GompRFlex", "GompGFlex")]
report = report[, c("R", "n", "t0","GompRFlex", "GompGFlex")]
head(report)
rm(list=ls())
set.seed(20170101)
library('flexsurv')
source("../lifespan.r")
report = read.csv("sandbox/Bootstrap_summary.csv")
report = report[, c("R", "n", "t0","GompRFlex", "GompGFlex")]
# summary(lm( log10(report$GompRFlex) ~ report$t0 + report$GompGFlex  )) #poor
# summary(lm( log10(report$GompGFlex) ~ report$t0 + report$GompRFlex  ))#good
#summary(lm( report$G ~ log10(report$R) + report$t0  ))
#summary(lm( report$G ~ report$t0 + log10(report$R)   ))
#summary(lm( report$GompGFlex ~ report$t0 + log10(report$R)   ))
summary(lm( report$GompGFlex ~ report$t0 + log10(report$GompRFlex)   ))
help(sorbel.test)
help(sobel.test)
?sobel
?sobel
help(sorbel)
help(package=mediation)
library(multilevel)
install.packages("multilevel")
library(multilevel)
#sobel(  )
?sobel
library(multilevel)
sobel( log10(report$GompRFlex), report$t0, report$GompGFlex )
library(multilevel)
#sobel( log10(report$GompRFlex), report$t0, report$GompGFlex )
mediation.test(log10(report$GompRFlex), report$t0, report$GompGFlex)
install.packages("bda")
library(bda)
mediation.test(log10(report$GompRFlex), report$t0, report$GompGFlex)
library(bda)
#mediation.test(log10(report$GompRFlex), report$t0, report$GompGFlex)
mediation.test( report$GompRFlex, report$t0, report$GompGFlex)
?mediation.test()
library(bda)
#mediation.test(log10(report$GompRFlex), report$t0, report$GompGFlex)
mediation.test( report$t0, log10(report$GompRFlex),  report$GompGFlex)
head(report)
plot( log10(report$GompRFlex) ~ report$GompGFlex, pch=19, col='red', xlab='G', ylab='log10(R)',
# xlim=c(0.07, 0.22), ylim=c(-2.9, -2.1),
main="Strehler-Mildvan correlation in yeast wild isolates")
m = lm(log10(report$GompRFlex) ~ report$GompGFlex)
summary(m)
abline (m, col='black', lty=2);
text(0.18, -2.2, "Rsquared=0.39 p=0.01")
my.x = report$G +0.0013 ; my.y = log10(report$R) ;
names(my.x) = report$my.strains; names(my.y) = report$my.strains;
my.y[c("YPS163", "M1-2" )]=c(-2.8, -2.63)
text(my.x,my.y, report$my.strains, adj=c(0,0) )
summary(lm(log10(report$GompRFlex) ~ report$GompGFlex)) #G from t0 and n
plot( log10(report$GompRFlex) ~ report$GompGFlex, pch=19, col='red', xlab='G', ylab='log10(R)',
xlim=c(0.05, 0.17), ylim=c(-3.5, -2.1),
main="Strehler-Mildvan correlation in yeast wild isolates")
m = lm(log10(report$GompRFlex) ~ report$GompGFlex)
summary(m)
abline (m, col='black', lty=2);
text(0.18, -2.2, "Rsquared=0.39 p=0.01")
my.x = report$G +0.0013 ; my.y = log10(report$R) ;
names(my.x) = report$my.strains; names(my.y) = report$my.strains;
my.y[c("YPS163", "M1-2" )]=c(-2.8, -2.63)
text(my.x,my.y, report$my.strains, adj=c(0,0) )
summary(lm(log10(report$GompRFlex) ~ report$GompGFlex)) #G from t0 and n
plot( log10(report$GompRFlex) ~ report$GompGFlex, pch=19, col='red', xlab='G', ylab='log10(R)',
xlim=c(0.05, 0.17), ylim=c(-3.5, -2.0),
main="Strehler-Mildvan correlation in yeast wild isolates")
m = lm(log10(report$GompRFlex) ~ report$GompGFlex)
summary(m)
abline (m, col='black', lty=2);
text(0.18, -2.2, "Rsquared=0.39 p=0.01")
my.x = report$G +0.0013 ; my.y = log10(report$R) ;
names(my.x) = report$my.strains; names(my.y) = report$my.strains;
my.y[c("YPS163", "M1-2" )]=c(-2.8, -2.63)
text(my.x,my.y, report$my.strains, adj=c(0,0) )
summary(lm(log10(report$GompRFlex) ~ report$GompGFlex)) #G from t0 and n
?text
report = read.csv("sandbox/Bootstrap_summary.csv")
#report = report[, c("R", "n", "t0","GompRFlex", "GompGFlex")]
head(report)
report = read.csv("sandbox/Bootstrap_summary.csv")
report = report[, c("strains", "R", "n", "t0","GompRFlex", "GompGFlex")]
plot( log10(report$GompRFlex) ~ report$GompGFlex, pch=19, col='red', xlab='G', ylab='log10(R)',
xlim=c(0.06, 0.17), ylim=c(-3.5, -2.0),
main="Strehler-Mildvan correlation in yeast wild isolates")
m = lm(log10(report$GompRFlex) ~ report$GompGFlex)
summary(m)
abline (m, col='black', lty=2);
text(0.18, -2.2, "Rsquared=0.39 p=0.01")
my.x = report$G +0.0013 ; my.y = log10(report$R) ;
names(my.x) = report$my.strains; names(my.y) = report$my.strains;
my.y[c("YPS163", "M1-2" )]=c(-2.8, -2.63)
text(my.x,my.y, report$my.strains, adj=c(0,0) )
summary(lm(log10(report$GompRFlex) ~ report$GompGFlex)) #G from t0 and n
plot( log10(report$GompRFlex) ~ report$GompGFlex, pch=19, col='red', xlab='G', ylab='log10(R)',
xlim=c(0.06, 0.17), ylim=c(-3.5, -2.0),
main="Strehler-Mildvan correlation in yeast wild isolates")
m = lm(log10(report$GompRFlex) ~ report$GompGFlex)
summary(m)
abline (m, col='black', lty=2);
text(0.1, -2.8, "Rsquared=0.39 p=0.01")
my.x = report$G +0.0013 ; my.y = log10(report$R) ;
names(my.x) = report$my.strains; names(my.y) = report$my.strains;
my.y[c("YPS163", "M1-2" )]=c(-2.8, -2.63)
text(my.x,my.y, report$my.strains, adj=c(0,0) )
summary(lm(log10(report$GompRFlex) ~ report$GompGFlex)) #G from t0 and n
plot( log10(report$GompRFlex) ~ report$GompGFlex, pch=19, col='red', xlab='G', ylab='log10(R)',
xlim=c(0.06, 0.17), ylim=c(-3.5, -2.0),
main="Strehler-Mildvan correlation in yeast wild isolates")
m = lm(log10(report$GompRFlex) ~ report$GompGFlex)
summary(m)
abline (m, col='black', lty=2);
text(0.1, -2.8, "Rsquared=0.39 p=0.01")
my.x = report$GompGFlex +0.0013 ; my.y = log10(report$GompRFlex) ;
names(my.x) = report$my.strains; names(my.y) = report$my.strains;
#my.y[c("YPS163", "M1-2" )]=c(-2.8, -2.63)
text(my.x,my.y, report$strains, adj=c(0,0) )
#summary(lm(log10(report$GompRFlex) ~ report$GompGFlex)) #G from t0 and n
?text
plot( log10(report$GompRFlex) ~ report$GompGFlex, pch=19, col='red', xlab='G', ylab='log10(R)',
xlim=c(0.06, 0.17), ylim=c(-3.5, -2.0),
main="Strehler-Mildvan correlation in yeast wild isolates")
m = lm(log10(report$GompRFlex) ~ report$GompGFlex)
summary(m)
abline (m, col='black', lty=2);
text(0.08, -3.3, expression(paste(R^2, "=0.44", \n, "p=0.007", sep=" ")) )
plot( log10(report$GompRFlex) ~ report$GompGFlex, pch=19, col='red', xlab='G', ylab='log10(R)',
xlim=c(0.06, 0.17), ylim=c(-3.5, -2.0),
main="Strehler-Mildvan correlation in yeast wild isolates")
m = lm(log10(report$GompRFlex) ~ report$GompGFlex)
summary(m)
abline (m, col='black', lty=2);
text(0.08, -3.3, expression(paste(R^2, "=0.44", "\n", "p=0.007", sep=" ")) )
my.x = report$GompGFlex +0.0013 ; my.y = log10(report$GompRFlex) ;
names(my.x) = report$my.strains; names(my.y) = report$my.strains;
#my.y[c("YPS163", "M1-2" )]=c(-2.8, -2.63)
text(my.x,my.y, report$strains, adj=c(0,0) )
#summary(lm(log10(report$GompRFlex) ~ report$GompGFlex)) #G from t0 and n
pdf("strehler-mildvan.pdf", with=4, height=4)
pdf("strehler-mildvan.pdf", width=4, height=4)
plot( log10(report$GompRFlex) ~ report$GompGFlex, pch=19, col='red', xlab='G', ylab='log10(R)',
xlim=c(0.06, 0.17), ylim=c(-3.5, -2.0),
main="Strehler-Mildvan correlation in yeast wild isolates")
m = lm(log10(report$GompRFlex) ~ report$GompGFlex)
summary(m)
abline (m, col='red', lty=2);
text(0.08, -3.3, expression(paste(R^2, "=0.44, p=0.007", sep="")) )
my.x = report$GompGFlex +0.0013 ; my.y = log10(report$GompRFlex) ;
names(my.x) = report$my.strains; names(my.y) = report$my.strains;
text(my.x,my.y, report$strains, adj=c(0,0) )
dev.off()
pdf("strehler-mildvan.pdf", width=5, height=5)
plot( log10(report$GompRFlex) ~ report$GompGFlex, pch=19, col='red', xlab='G', ylab='log10(R)',
xlim=c(0.06, 0.17), ylim=c(-3.5, -2.0),
main="Strehler-Mildvan correlation in yeast wild isolates")
m = lm(log10(report$GompRFlex) ~ report$GompGFlex)
summary(m)
abline (m, col='red', lty=2);
text(0.08, -3.3, expression(paste(R^2, "=0.44, p=0.007", sep="")) )
my.x = report$GompGFlex +0.0013 ; my.y = log10(report$GompRFlex) ;
names(my.x) = report$my.strains; names(my.y) = report$my.strains;
text(my.x,my.y, report$strains, adj=c(0,0) )
dev.off()
m = lm(  log10(report$GompRFlex) ~ report$t0  )
summary(m)
plot( log10(report$GompRFlex) ~ report$t0, col='red',  pch=19, xlab='t0', ylab='log10(R)', ylim=c(-3.5,-2))
my.x = report$t0 ; my.y = log10(report$GompRFlex) + 0.04;
names(my.x) = report$strains; names(my.y) = report$strains;
my.y[c("M34","M1-2", "S288c" )]=c(-2.75, -2.6, -2.3)
text(my.x,my.y, report$strains, adj=c(0,0) );
abline (m, col='black', lty=2);
text( 60, -2.8, "R^2=0.38, p=0.014")
m = lm(  log10(report$GompRFlex) ~ report$t0  )
summary(m)
plot( log10(report$GompRFlex) ~ report$t0, col='red',  pch=19, xlab='t0', ylab='log10(R)', ylim=c(-3.5,-2))
my.x = report$t0 ; my.y = log10(report$GompRFlex) + 0.04;
names(my.x) = report$strains; names(my.y) = report$strains;
my.y[c("M34","M1-2", "S288c" )]=c(-2.9, -2.8, -2.3)
text(my.x,my.y, report$strains, adj=c(0,0) );
abline (m, col='black', lty=2);
text( 60, -2.8, "R^2=0.38, p=0.014")
m = lm(  log10(report$GompRFlex) ~ report$t0  )
summary(m)
plot( log10(report$GompRFlex) ~ report$t0, col='red',  pch=19, xlab='t0', ylab='log10(R)', ylim=c(-3.5,-2))
my.x = report$t0 ; my.y = log10(report$GompRFlex) + 0.04;
names(my.x) = report$strains; names(my.y) = report$strains;
my.y[c("M34","M1-2", "S288c" )]=c(-2.9, -2.6, -2.3)
text(my.x,my.y, report$strains, adj=c(0,0) );
abline (m, col='black', lty=2);
text( 60, -2.8, "R^2=0.38, p=0.014")
m = lm(  log10(report$GompRFlex) ~ report$t0  )
summary(m)
plot( log10(report$GompRFlex) ~ report$t0, col='red',  pch=19, xlab='t0', ylab='log10(R)', ylim=c(-3.5,-2))
my.x = report$t0 ; my.y = log10(report$GompRFlex) + 0.04;
names(my.x) = report$strains; names(my.y) = report$strains;
my.y[c("M34","M1-2", "S288c" )]=c(-2.9, -2.7, -2.3)
text(my.x,my.y, report$strains, adj=c(0,0) );
abline (m, col='black', lty=2);
text( 60, -2.8, "R^2=0.38, p=0.014")
m = lm(  log10(report$GompRFlex) ~ report$t0  )
summary(m)
plot( log10(report$GompRFlex) ~ report$t0, col='red',  pch=19, xlab='t0', ylab='log10(R)', ylim=c(-3.5,-2))
my.x = report$t0 ; my.y = log10(report$GompRFlex) + 0.04;
names(my.x) = report$strains; names(my.y) = report$strains;
my.y[c("M34","M1-2", "S288c" )]=c(-2.99, -2.7, -2.3)
text(my.x,my.y, report$strains, adj=c(0,0) );
abline (m, col='black', lty=2);
text( 60, -2.8, "R^2=0.38, p=0.014")
m = lm(  log10(report$GompRFlex) ~ report$t0  )
summary(m)
plot( log10(report$GompRFlex) ~ report$t0, col='red',  pch=19, xlab='t0', ylab='log10(R)', ylim=c(-3.5,-2))
my.x = report$t0 ; my.y = log10(report$GompRFlex) + 0.04;
names(my.x) = report$strains; names(my.y) = report$strains;
my.y[c("M34","M1-2", "S288c" )]=c(-2.95, -2.7, -2.3)
text(my.x,my.y, report$strains, adj=c(0,0) );
abline (m, col='black', lty=2);
text( 60, -2.8, "R^2=0.38, p=0.014")
m = lm(  log10(report$GompRFlex) ~ report$t0  )
summary(m)
plot( log10(report$GompRFlex) ~ report$t0, col='red',  pch=19, xlab='t0', ylab='log10(R)', ylim=c(-3.5,-2), xlim=c(30,77))
my.x = report$t0 ; my.y = log10(report$GompRFlex) + 0.04;
names(my.x) = report$strains; names(my.y) = report$strains;
my.y[c("M34","M1-2", "S288c" )]=c(-2.95, -2.7, -2.3)
text(my.x,my.y, report$strains, adj=c(0,0) );
abline (m, col='black', lty=2);
text( 60, -3.3, expression(paste(R^2, "=0.38, p=0.014", sep="")) )
?sobel
x1 = rnorm(100)
m1 = x1*0.5 + rnorm(100)*0.05
y1 = m1 + rnorm(100)*0.05
sobel(x1, m1, y1)
x1 = rnorm(100)
m1 = x1*0.5 + rnorm(100)*0.05
y1 = m1 + rnorm(100)*0.05
mediation.test( m1, x1, y1)
sobel(x1, m1, y1)
?sobel
require(multilevel)
?sobel
help(package=mediation)
demo()
example(mediate)
requrie(mediation)
require(mediation)
example(mediate)
